{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import DragScroll from 'react-dragscroll';\n\nvar HorizontalScrollNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalScrollNav, _React$Component);\n\n  function HorizontalScrollNav(props) {\n    var _this;\n\n    _classCallCheck(this, HorizontalScrollNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorizontalScrollNav).call(this, props));\n    _this.state = {\n      dragging: false,\n      scrollPosition: 0,\n      current: false\n    };\n    _this.current = false;\n    return _this;\n  }\n\n  _createClass(HorizontalScrollNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.addEventListener('scroll', this.scrollHandle.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.removeEventListener('scroll', this.scrollHandle.bind(this));\n    }\n  }, {\n    key: \"sortByValue\",\n    value: function sortByValue(obj) {\n      var newObj = {};\n      var sortable = Object.keys(obj).map(function (key) {\n        return [key, obj[key]];\n      });\n      sortable.sort(function (a, b) {\n        return a[1] - b[1];\n      });\n      sortable.forEach(function (obj) {\n        newObj[obj[0]] = obj[1];\n      });\n      return newObj;\n    }\n  }, {\n    key: \"scrollHandle\",\n    value: function scrollHandle(e) {\n      this.setState({\n        scrollPosition: window.scrollY\n      });\n    }\n  }, {\n    key: \"handleSectionChange\",\n    value: function handleSectionChange(ref) {\n      var current = this.current;\n\n      if (!current) {\n        this.current = ref;\n      } else if (current !== ref) {\n        this.refs.container.scrollLeft = this[ref].offsetLeft;\n        this.current = ref;\n      }\n    }\n  }, {\n    key: \"sectionClickHandle\",\n    value: function sectionClickHandle(e, offset, ref) {\n      window.scrollTo({\n        top: offset,\n        behavior: 'smooth'\n      });\n      this.current = ref;\n      e.preventDefault();\n    }\n  }, {\n    key: \"mouseUpHandle\",\n    value: function mouseUpHandle(e) {\n      if (this.state.dragging) {\n        // const dragging = false;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"mouseDownHandle\",\n    value: function mouseDownHandle(e) {\n      if (!this.state.dragging) {\n        // this.state.dragging = true;\n        this.setState(this.state);\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"mouseMoveHandle\",\n    value: function mouseMoveHandle(e) {\n      if (this.state.dragging) {\n        this.refs.container.scrollLeft -= -this.lastClientX + (this.lastClientX = e.clientX);\n        this.refs.container.scrollTop -= -this.lastClientY + (this.lastClientY = e.clientY);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // eslint-disable-next-line\n      var _this$props = this.props,\n          sectionPositions = _this$props.sectionPositions,\n          sectionNames = _this$props.sectionNames;\n      var sortedPositions = this.sortByValue(sectionPositions);\n      var sections = Object.keys(sortedPositions);\n      console.log(sortedPositions);\n      return React.createElement(\"div\", {\n        className: \"selectSection\",\n        onMouseUp: this.mouseUpHandle.bind(this),\n        onMouseMove: this.mouseMoveHandle.bind(this),\n        ref: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, sections.map(function (section, index) {\n        var y = _this2.state.scrollPosition;\n        var sectionPosition = sortedPositions[section] - 25;\n        var nextPosition = sortedPositions[sections[index + 1]];\n        var nextValue = nextPosition ? nextPosition : -1;\n        console.log({\n          section: section,\n          y: y,\n          sectionPosition: sectionPosition,\n          nextValue: nextValue\n        });\n        var className = sectionPosition < 1 & _this2.current === false || _this2.current === \"$scroll-nav-\".concat(section) ? \"red\" : '';\n        var go = y >= sectionPosition - 1 && y < nextValue + 1 ? _this2.handleSectionChange(\"$scroll-nav-\".concat(section)) : '';\n        return React.createElement(\"span\", {\n          onClick: function onClick(e) {\n            _this2.sectionClickHandle(e, sectionPosition, \"$scroll-nav-\".concat(section));\n          },\n          ref: function ref(_ref) {\n            return _this2[\"$scroll-nav-\".concat(section)] = _ref;\n          },\n          id: \"$scroll-nav-\".concat(section),\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, section);\n      }));\n    }\n  }]);\n\n  return HorizontalScrollNav;\n}(React.Component);\n\n;\nexport default HorizontalScrollNav;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js"],"names":["React","ReactDOM","HorizontalScrollNav","props","state","dragging","scrollPosition","current","window","addEventListener","mouseUpHandle","bind","mouseMoveHandle","scrollHandle","removeEventListener","obj","newObj","sortable","Object","keys","map","key","sort","a","b","forEach","e","setState","scrollY","ref","refs","container","scrollLeft","offsetLeft","offset","scrollTo","top","behavior","preventDefault","lastClientX","clientX","lastClientY","clientY","scrollTop","sectionPositions","sectionNames","sortedPositions","sortByValue","sections","console","log","section","index","y","sectionPosition","nextPosition","nextValue","className","go","handleSectionChange","sectionClickHandle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import DragScroll from 'react-dragscroll';\n\nclass HorizontalScrollNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          dragging: false,\n          scrollPosition: 0,\n          current: false,\n        };\n\n        this.current = false;\n    }\n\n    componentDidMount() {\n        window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n        window.addEventListener('scroll', this.scrollHandle.bind(this));\n    }\n\n      componentWillUnmount() {\n        window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n        window.removeEventListener('scroll', this.scrollHandle.bind(this));\n    }\n\n    sortByValue(obj){\n        const newObj = {};\n        const sortable = Object.keys(obj).map(key => [key, obj[key]]);\n        sortable.sort((a,b) => a[1] - b[1]);\n        sortable.forEach(obj => {\n          newObj[obj[0]] = obj[1]\n        });\n    \n        return newObj;\n      } \n\n    scrollHandle(e){\n        this.setState({scrollPosition: window.scrollY});\n    }\n\n    handleSectionChange(ref){\n        const { current } = this;\n        if (!current){\n            this.current = ref;\n        } else if(current !== ref){\n                this.refs.container.scrollLeft = this[ref].offsetLeft\n                this.current = ref;\n        }\n    }\n\n    sectionClickHandle(e, offset, ref){\n        window.scrollTo({\n            top: offset,\n            behavior: 'smooth',\n        });\n        this.current = ref;\n        e.preventDefault();\n    }\n\n    mouseUpHandle(e) {\n        if (this.state.dragging) {\n          // const dragging = false;\n          this.setState(this.state);\n        }\n      }\n\n    mouseDownHandle(e) {\n        if (!this.state.dragging) {\n          // this.state.dragging = true;\n          this.setState(this.state);\n          this.lastClientX = e.clientX;\n          this.lastClientY = e.clientY;\n          e.preventDefault();\n        }\n      }\n\n      mouseMoveHandle(e) {\n        if (this.state.dragging) {\n          this.refs.container.scrollLeft -=\n            (-this.lastClientX + (this.lastClientX = e.clientX));\n          this.refs.container.scrollTop -=\n            (-this.lastClientY + (this.lastClientY = e.clientY));\n        }\n      }\n\n    render() {\n        // eslint-disable-next-line\n        const { sectionPositions, sectionNames } = this.props;\n        const sortedPositions = this.sortByValue(sectionPositions);\n        const sections = Object.keys(sortedPositions);\n        console.log(sortedPositions);\n        return (\n            <div\n                className=\"selectSection\"\n                onMouseUp={this.mouseUpHandle.bind(this)}\n                onMouseMove={this.mouseMoveHandle.bind(this)}\n                ref=\"container\">\n                {sections.map((section,index)  => {\n                    const y = this.state.scrollPosition;\n                    const sectionPosition = sortedPositions[section]-25;\n                    const nextPosition = sortedPositions[sections[index + 1]];\n                    const nextValue = nextPosition ? nextPosition : -1;\n                    console.log({section, y, sectionPosition, nextValue})\n                    const className = (sectionPosition < 1 & this.current===false) || this.current === `$scroll-nav-${section}` ? \"red\" : '';\n                    const go = y >= sectionPosition-1 && y < nextValue+1 ? this.handleSectionChange(`$scroll-nav-${section}`) : '';\n\n                    return (\n                        <span \n                            onClick={(e) => {this.sectionClickHandle(e, sectionPosition, `$scroll-nav-${section}`)}} \n                            ref={(ref) => this[`$scroll-nav-${section}`]=ref}\n                            id={`$scroll-nav-${section}`}\n                            className={className}>\n                                {section}\n                        </span>\n                    );\n                })}\n            </div>\n        );\n    }\n};\n\nexport default HorizontalScrollNav;\n"]},"metadata":{},"sourceType":"module"}