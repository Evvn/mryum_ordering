{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Landing/Landing.js\";\n// not being used, ref. for boiler\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport * as actions from './actions/actions.js';\nimport { clientTypes, routes } from '../Common/enums/commonEnums.js';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Landing, _React$Component);\n\n  function Landing() {\n    _classCallCheck(this, Landing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Landing).apply(this, arguments));\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          clientType = _this$props.clientType,\n          venueUrl = _this$props.venueUrl,\n          routeTo = _this$props.routeTo;\n\n      if (clientType) {\n        window.location = \"/\".concat(venueUrl, \"/\").concat(routes.MENU);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var setClientType = this.props.setClientType;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Landing\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return setClientType(clientTypes.SEATED);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, clientTypes.SEATED), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return setClientType(clientTypes.STANDING);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, clientTypes.STANDING)));\n    }\n  }]);\n\n  return Landing;\n}(React.Component); // redux component boiler \n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    clientType: state.persistentCommon.clientType\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Landing/Landing.js"],"names":["bindActionCreators","connect","React","actions","clientTypes","routes","Landing","props","clientType","venueUrl","routeTo","window","location","MENU","setClientType","SEATED","STANDING","Component","mapDispatchToProps","dispatch","mapStateToProps","state","persistentCommon"],"mappings":";;;;;;AAAA;AACA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,gCAApC;;IAEMC,O;;;;;;;;;;;;;yCAEgB;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACVC,UADU,eACVA,UADU;AAAA,UACEC,QADF,eACEA,QADF;AAAA,UACYC,OADZ,eACYA,OADZ;;AAElB,UAAIF,UAAJ,EAAgB;AACdG,QAAAA,MAAM,CAACC,QAAP,cAAsBH,QAAtB,cAAkCJ,MAAM,CAACQ,IAAzC;AACD;AACF;;;6BAEQ;AAAA,UACCC,aADD,GACmB,KAAKP,KADxB,CACCO,aADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMA,aAAa,CAACV,WAAW,CAACW,MAAb,CAAnB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGX,WAAW,CAACW,MADf,CADF,EAIE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMD,aAAa,CAACV,WAAW,CAACY,QAAb,CAAnB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,WAAW,CAACY,QADf,CAJF,CAFF,CADF;AAaD;;;;EAxBmBd,KAAK,CAACe,S,GA2B5B;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAInB,kBAAkB,CAACG,OAAD,EAAUgB,QAAV,CAAtB;AAAA,CAAnC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCb,IAAAA,UAAU,EAAEa,KAAK,CAACC,gBAAN,CAAuBd;AADH,GAAL;AAAA,CAA7B;;AAIA,eAAeP,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CZ,OAA7C,CAAf","sourcesContent":["// not being used, ref. for boiler\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport React from 'react';\n\nimport * as actions from './actions/actions.js'\nimport { clientTypes, routes } from '../Common/enums/commonEnums.js';\n\nclass Landing extends React.Component {\n\n  componentWillMount(){\n    const { clientType, venueUrl, routeTo } = this.props;\n    if (clientType) {\n      window.location = `/${venueUrl}/${routes.MENU}`;\n    }\n  }\n\n  render() {\n    const { setClientType } = this.props;\n    return (\n      <div>\n        <h1>Landing</h1>\n        <div>\n          <button onClick={() => setClientType(clientTypes.SEATED)}>\n            {clientTypes.SEATED}\n          </button>\n          <button onClick={() => setClientType(clientTypes.STANDING)}>\n            {clientTypes.STANDING}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// redux component boiler \nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch)\n\nconst mapStateToProps = state => ({\n  clientType: state.persistentCommon.clientType,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);\n"]},"metadata":{},"sourceType":"module"}