{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\src\\\\components\\\\Common\\\\MenuSearch.js\";\nimport React from 'react';\n\nvar MenuSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MenuSearch, _React$Component);\n\n  function MenuSearch(props) {\n    var _this;\n\n    _classCallCheck(this, MenuSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenuSearch).call(this, props));\n\n    _this.search =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(input) {\n        var data, _dataKeys, expression, big_bucket, sectionsPromise, pricePromise, itemNamePromise, itemDescriptionPromise, _ref2, _ref3, sections, price, itemName, itemDesc;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _this.props.data;\n                _dataKeys = Object.keys(data.menuByItem);\n\n                if (!input) {\n                  _context.next = 17;\n                  break;\n                }\n\n                expression = new RegExp(\"\".concat(input), 'gi');\n                big_bucket = []; // refactor to run async\n\n                sectionsPromise = new Promise(function (resolve) {\n                  var bucket = [];\n\n                  for (var _i = 0, _dataKeys2 = _dataKeys; _i < _dataKeys2.length; _i++) {\n                    var key = _dataKeys2[_i];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['category'])) {\n                      var _fields = data[key].fields;\n\n                      var searchScore = _this.score(_fields['category'].toString(), expression);\n\n                      bucket.push({\n                        result: _fields['category'],\n                        score: searchScore\n                      });\n                    }\n                  }\n\n                  console.log('sections', bucket);\n                  resolve(bucket);\n                });\n                pricePromise = new Promise(function (resolve) {\n                  var bucket = [];\n                  var expression = new RegExp(\"\".concat(input), 'gi');\n\n                  for (var _i2 = 0, _dataKeys3 = _dataKeys; _i2 < _dataKeys3.length; _i2++) {\n                    var key = _dataKeys3[_i2];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['price'])) {\n                      var _fields2 = data.menuByItem[key].fields;\n\n                      var searchScore = _this.score(_fields2['price'].toString(), expression);\n\n                      bucket.push({\n                        result: _fields2['price'],\n                        score: searchScore\n                      });\n                    }\n                  }\n\n                  console.log('price', bucket);\n                  resolve(bucket);\n                });\n                itemNamePromise = new Promise(function (resolve) {\n                  var bucket = [];\n\n                  for (var _i3 = 0, _dataKeys4 = _dataKeys; _i3 < _dataKeys4.length; _i3++) {\n                    var key = _dataKeys4[_i3];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['name'])) {\n                      var _fields3 = data.menuByItem[key].fields;\n\n                      var searchScore = _this.score(_fields3['name'].toString(), expression);\n\n                      bucket.push({\n                        result: _fields3['name'],\n                        score: searchScore\n                      });\n                    }\n                  }\n\n                  console.log('item name', bucket);\n                  resolve(bucket);\n                });\n                itemDescriptionPromise = new Promise(function (resolve) {\n                  var bucket = [];\n\n                  for (var _i4 = 0, _dataKeys5 = _dataKeys; _i4 < _dataKeys5.length; _i4++) {\n                    var key = _dataKeys5[_i4];\n                    var fields = data.menuByItem[key].fields;\n\n                    if (expression.test(fields['description'])) {\n                      var _fields4 = data.menuByItem[key].fields;\n\n                      var searchScore = _this.score(_fields4['description'].toString(), expression);\n\n                      bucket.push({\n                        result: _fields4['description'],\n                        score: searchScore\n                      });\n                    }\n                  }\n\n                  console.log('description', bucket);\n                  resolve(bucket);\n                });\n                _context.next = 11;\n                return Promise.all([sectionsPromise, pricePromise, itemNamePromise, itemDescriptionPromise]);\n\n              case 11:\n                _ref2 = _context.sent;\n                _ref3 = _slicedToArray(_ref2, 4);\n                sections = _ref3[0];\n                price = _ref3[1];\n                itemName = _ref3[2];\n                itemDesc = _ref3[3];\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.score = function (entry, regex, field) {\n      var matched = entry.match(regex);\n\n      if (matched) {\n        var result;\n\n        switch (field) {\n          case 'price':\n            result = matched.length / entry.length;\n            break;\n\n          default:\n            result = matched.length / entry.length;\n            break;\n        }\n\n        return result.toFixed(3);\n      }\n    };\n\n    _this.result = [];\n    return _this;\n  } // Sections: Drinks, Price: 4, Item Name: Coffee | Tea | Etc, Item Description: Batch Brew Filter \n\n\n  _createClass(MenuSearch, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      this.search('4').then(function (oops) {\n        console.log(oops);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, 'hello');\n    }\n  }]);\n\n  return MenuSearch;\n}(React.Component);\n\nexport default MenuSearch;","map":{"version":3,"sources":["D:\\Documents\\GitHub\\mryum-avc\\src\\components\\Common\\MenuSearch.js"],"names":["React","MenuSearch","props","search","input","data","_dataKeys","Object","keys","menuByItem","expression","RegExp","big_bucket","sectionsPromise","Promise","resolve","bucket","key","fields","test","searchScore","score","toString","push","result","console","log","pricePromise","itemNamePromise","itemDescriptionPromise","all","sections","price","itemName","itemDesc","entry","regex","field","matched","match","length","toFixed","then","oops","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass MenuSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.result = [];\r\n    }\r\n\r\n    // Sections: Drinks, Price: 4, Item Name: Coffee | Tea | Etc, Item Description: Batch Brew Filter \r\n    search = async input => {\r\n        const {data} = this.props;\r\n        const _dataKeys = Object.keys(data.menuByItem);\r\n        if (input) {\r\n            let expression = new RegExp(`${input}`, 'gi');\r\n            \r\n            let big_bucket = [];\r\n            \r\n            // refactor to run async\r\n            let sectionsPromise = new Promise(resolve => {\r\n                let bucket = [];\r\n                for (const key of _dataKeys) {\r\n                    let fields = data.menuByItem[key].fields;\r\n                    if (expression.test(fields['category'])) {\r\n                        let fields = data[key].fields;\r\n                        let searchScore = this.score(fields['category'].toString(), expression);\r\n                        bucket.push({result: fields['category'], score: searchScore});\r\n                    }\r\n                }\r\n                \r\n                console.log('sections', bucket)\r\n                resolve(bucket);\r\n            });\r\n\r\n            let pricePromise = new Promise(resolve => {\r\n                let bucket = [];\r\n                let expression = new RegExp(`${input}`, 'gi');\r\n                for (const key of _dataKeys) {\r\n                    let fields = data.menuByItem[key].fields;\r\n                    \r\n                    if (expression.test(fields['price'])) {\r\n                        let fields = data.menuByItem[key].fields;\r\n                        let searchScore = this.score(fields['price'].toString(), expression);\r\n                        bucket.push({result: fields['price'], score: searchScore});\r\n                    }\r\n                }\r\n                console.log('price', bucket)\r\n                resolve(bucket);\r\n            });\r\n\r\n            let itemNamePromise = new Promise(resolve => {\r\n                let bucket = [];\r\n                for (const key of _dataKeys) {\r\n                    let fields = data.menuByItem[key].fields;\r\n                \r\n                    if (expression.test(fields['name'])) {\r\n                        let fields = data.menuByItem[key].fields;\r\n                        let searchScore = this.score(fields['name'].toString(), expression);\r\n                        bucket.push({result: fields['name'], score: searchScore});\r\n                    }\r\n                }\r\n\r\n                console.log('item name', bucket)\r\n                resolve(bucket);\r\n            });\r\n\r\n            let itemDescriptionPromise = new Promise(resolve => {\r\n                let bucket = [];\r\n                for (const key of _dataKeys) {\r\n                    let fields = data.menuByItem[key].fields;\r\n                \r\n                    if (expression.test(fields['description'])) {\r\n                        let fields = data.menuByItem[key].fields;\r\n                        let searchScore = this.score(fields['description'].toString(), expression);\r\n                        bucket.push({result: fields['description'], score: searchScore});\r\n                    }\r\n                }\r\n\r\n                console.log('description', bucket)\r\n                resolve(bucket);\r\n            });\r\n            \r\n            \r\n\r\n            const [sections, price, itemName, itemDesc] = await Promise.all([sectionsPromise, pricePromise, itemNamePromise, itemDescriptionPromise]);\r\n\r\n            \r\n        \r\n            // expression.sort((a,b) => (a.score < b.score) ? 1 : ((b.score < a.score) ? -1 : 0));\r\n            // let actionables = [];\r\n            // bucket.map(x => actionables.push(x.result));\r\n            // this.result = actionables;\r\n            //console.log(sections);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // set some kind of weight on . or , for price\r\n    score = (entry, regex, field) => {\r\n        let matched = entry.match(regex);\r\n        if (matched) {\r\n            let result;\r\n            switch (field) {\r\n                case 'price':\r\n\r\n                    result = matched.length / entry.length;\r\n                    break;\r\n            \r\n                default:\r\n                    result = matched.length / entry.length;\r\n                    break;\r\n            }\r\n            return result.toFixed(3);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.props;\r\n        this.search('4').then(oops => {\r\n            console.log(oops)\r\n        })\r\n        return ( \r\n            <div> \r\n                { 'hello' } \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuSearch;"]},"metadata":{},"sourceType":"module"}