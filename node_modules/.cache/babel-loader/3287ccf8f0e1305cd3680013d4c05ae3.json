{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js\";\nimport React from 'react';\nimport DragScroll from 'react-dragscroll';\nimport classNames from 'classnames';\n\nvar HorizontalScrollNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalScrollNav, _React$Component);\n\n  function HorizontalScrollNav(props) {\n    var _this;\n\n    _classCallCheck(this, HorizontalScrollNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorizontalScrollNav).call(this, props));\n    _this.state = {\n      dragging: false\n    };\n    return _this;\n  }\n\n  _createClass(HorizontalScrollNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n  }, {\n    key: \"mouseUpHandle\",\n    value: function mouseUpHandle(e) {\n      if (this.state.dragging) {\n        this.state.dragging = false;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"mouseDownHandle\",\n    value: function mouseDownHandle(e) {\n      if (!this.state.dragging) {\n        this.state.dragging = true;\n        this.setState(this.state);\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"mouseMoveHandle\",\n    value: function mouseMoveHandle(e) {\n      if (this.state.dragging) {\n        this.refs.container.scrollLeft -= -this.lastClientX + (this.lastClientX = e.clientX);\n        this.refs.container.scrollTop -= -this.lastClientY + (this.lastClientY = e.clientY);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren(dom, type) {\n      var _this2 = this;\n\n      if (this.isArray(dom)) {\n        return dom.map(function (item, index) {\n          return React.cloneElement(item, {\n            key: item.key || index,\n            onMouseUp: _this2.mouseUpHandle.bind(_this2),\n            onMouseDown: _this2.mouseDownHandle.bind(_this2)\n          });\n        });\n      } else if ('object' == typeof dom) {\n        return React.cloneElement(dom, {\n          onMouseUp: this.mouseUpHandle.bind(this),\n          onMouseDown: this.mouseDownHandle.bind(this)\n        });\n      }\n    }\n  }, {\n    key: \"isArray\",\n    value: function isArray(object) {\n      return object && typeof object === 'object' && typeof object.length === 'number' && typeof object.splice === 'function' && //判断length属性是否是可枚举的 对于数组 将得到false\n      !object.propertyIsEnumerable('length');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var sections = this.props.sections;\n      return React.createElement(\"div\", {\n        className: this.props.className,\n        onMouseUp: this.mouseUpHandle.bind(this),\n        onMouseMove: this.mouseMoveHandle.bind(this),\n        ref: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, sections.map(function (section) {\n        return React.createElement(\"span\", {\n          className: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, section);\n      }));\n    }\n  }]);\n\n  return HorizontalScrollNav;\n}(React.Component);\n\n;\nexport default HorizontalScrollNav;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js"],"names":["React","DragScroll","classNames","HorizontalScrollNav","props","state","dragging","window","addEventListener","mouseUpHandle","bind","mouseMoveHandle","removeEventListener","e","setState","lastClientX","clientX","lastClientY","clientY","preventDefault","refs","container","scrollLeft","scrollTop","dom","type","isArray","map","item","index","cloneElement","key","onMouseUp","onMouseDown","mouseDownHandle","object","length","splice","propertyIsEnumerable","sections","className","section","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DragScroll from 'react-dragscroll';\nimport classNames from 'classnames';\n\n\nclass HorizontalScrollNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          dragging: false\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n    \n      componentWillUnmount() {\n        window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n\n    mouseUpHandle(e) {\n        if (this.state.dragging) {\n          this.state.dragging = false;\n          this.setState(this.state);\n        }\n      }\n\n    mouseDownHandle(e) {\n        if (!this.state.dragging) {\n          this.state.dragging = true;\n          this.setState(this.state);\n          this.lastClientX = e.clientX;\n          this.lastClientY = e.clientY;\n          e.preventDefault();\n        }\n      }\n    \n      mouseMoveHandle(e) {\n        if (this.state.dragging) {\n          this.refs.container.scrollLeft -=\n            (-this.lastClientX + (this.lastClientX = e.clientX));\n          this.refs.container.scrollTop -=\n            (-this.lastClientY + (this.lastClientY = e.clientY));\n        }\n      }\n    \n      renderChildren(dom, type) {\n        if (this.isArray(dom)) {\n          return dom.map((item, index) => {\n            return React.cloneElement(item, {\n              key: item.key || index,\n              onMouseUp: this.mouseUpHandle.bind(this),\n              onMouseDown: this.mouseDownHandle.bind(this)\n            });\n          });\n        } else if ('object' == typeof dom) {\n          return React.cloneElement(dom, {\n            onMouseUp: this.mouseUpHandle.bind(this),\n            onMouseDown: this.mouseDownHandle.bind(this)\n          });\n        }\n      }\n    \n      isArray(object){\n        return  object && typeof object==='object' &&\n          typeof object.length==='number' &&\n          typeof object.splice==='function' &&\n          //判断length属性是否是可枚举的 对于数组 将得到false\n          !(object.propertyIsEnumerable('length'));\n      }\n\n    render() {\n        const { sections } = this.props;\n        return <div className={this.props.className}\n                    onMouseUp={this.mouseUpHandle.bind(this)}\n                    onMouseMove={this.mouseMoveHandle.bind(this)}\n                    ref=\"container\">\n          {sections.map(section => (\n                    <span className=\"red\">\n                        {section}\n                    </span>\n                ))}\n        </div>;\n    }\n\n};\n\nexport default HorizontalScrollNav;"]},"metadata":{},"sourceType":"module"}