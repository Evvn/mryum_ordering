{"ast":null,"code":"import _classCallCheck from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\src\\\\components\\\\Common\\\\HorizontalScrollNav.js\";\nimport React from 'react'; // import ReactDOM from 'react-dom';\n\nimport _ from 'lodash';\nimport NavBadge from './NavBadge'; // import DragScroll from 'react-dragscroll';\n\nvar HorizontalScrollNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalScrollNav, _React$Component);\n\n  function HorizontalScrollNav(props) {\n    var _this;\n\n    _classCallCheck(this, HorizontalScrollNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorizontalScrollNav).call(this, props));\n    _this.state = {\n      dragging: false,\n      currentPosition: 0,\n      offset: 0\n    };\n    _this.current = false;\n    _this.currentPosition = 0;\n    _this.handleSelection = _this.handleSelection.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sectionUpdateHandle = _this.sectionUpdateHandle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HorizontalScrollNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.addEventListener('mousemove', this.mouseMoveHandle.bind(this)); // add event listener on scroll with throttling to prevent excessive events being fired\n\n      window.addEventListener('scroll', _.throttle(this.scrollHandle.bind(this), 500, {\n        trailing: true,\n        leading: true\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.removeEventListener('scroll', this.scrollHandle.bind(this));\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n      this.current = false;\n    }\n  }, {\n    key: \"sortByValue\",\n    value: function sortByValue(obj) {\n      var newObj = {};\n      var sortable = Object.keys(obj).map(function (key, index) {\n        return [key, obj[key], obj[Object.keys(obj)[index + 1]]];\n      });\n      sortable.sort(function (a, b) {\n        return a[1] - b[1];\n      });\n      sortable.forEach(function (obj) {\n        newObj[obj[0]] = [obj[1], obj[2] ? obj[2] : Infinity];\n      });\n      return newObj;\n    }\n  }, {\n    key: \"scrollHandle\",\n    value: function scrollHandle(e) {\n      e.preventDefault();\n      this.setState({\n        currentPosition: window.scrollY\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, id, section) {\n      var _this2 = this;\n\n      var sectionPositions = this.props.sectionPositions;\n      document.getElementById(id).classList.add('red');\n\n      var moveTo = function moveTo() {\n        var offset = sectionPositions[section] < 50 ? 0 : sectionPositions[section] - 35;\n        _this2.refs.container.scrollLeft = _this2.state.offset;\n        window.scrollTo({\n          top: offset,\n          behavior: 'smooth'\n        });\n      };\n\n      this.setState({\n        offset: document.getElementById(id).offsetLeft\n      }, moveTo);\n      e.stopPropagation();\n    }\n  }, {\n    key: \"sectionUpdateHandle\",\n    value: function sectionUpdateHandle(offset) {\n      // console.log('/////////////////////');\n      if (this.refs.container) {\n        this.refs.container.scrollLeft = offset;\n      } // this.setState({offset});\n\n    }\n  }, {\n    key: \"mouseUpHandle\",\n    value: function mouseUpHandle(e) {\n      if (this.state.dragging) {\n        // const dragging = false;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"mouseDownHandle\",\n    value: function mouseDownHandle(e) {\n      if (!this.state.dragging) {\n        // this.state.dragging = true;\n        this.setState(this.state);\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"mouseMoveHandle\",\n    value: function mouseMoveHandle(e) {\n      if (this.state.dragging) {\n        this.refs.container.scrollLeft -= -this.lastClientX + (this.lastClientX = e.clientX);\n        this.refs.container.scrollTop -= -this.lastClientY + (this.lastClientY = e.clientY);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // eslint-disable-next-line\n      var sectionPositions = this.props.sectionPositions;\n      var currentPosition = this.state.currentPosition;\n      var sectionNames = Object.keys(sectionPositions);\n      var sortedPositions = this.sortByValue(sectionPositions);\n      return React.createElement(\"div\", {\n        className: \"selectSection\",\n        onMouseUp: this.mouseUpHandle.bind(this),\n        onMouseMove: this.mouseMoveHandle.bind(this),\n        ref: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, sectionNames.map(function (section, index) {\n        return React.createElement(NavBadge, {\n          key: sectionPositions[section],\n          section: section,\n          onSelect: function onSelect(e) {\n            _this3.handleSelection(e, \"$scroll-nav-\".concat(section), section);\n          },\n          ref: \"$scroll-nav-\".concat(section),\n          currentPosition: currentPosition,\n          interval: sortedPositions[section],\n          updateSection: _this3.sectionUpdateHandle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return HorizontalScrollNav;\n}(React.Component);\n\n;\nexport default HorizontalScrollNav;","map":{"version":3,"sources":["D:\\Documents\\GitHub\\mryum-avc\\src\\components\\Common\\HorizontalScrollNav.js"],"names":["React","_","NavBadge","HorizontalScrollNav","props","state","dragging","currentPosition","offset","current","handleSelection","bind","sectionUpdateHandle","window","addEventListener","mouseUpHandle","mouseMoveHandle","throttle","scrollHandle","trailing","leading","removeEventListener","scrollTo","top","behavior","obj","newObj","sortable","Object","keys","map","key","index","sort","a","b","forEach","Infinity","e","preventDefault","setState","scrollY","id","section","sectionPositions","document","getElementById","classList","add","moveTo","refs","container","scrollLeft","offsetLeft","stopPropagation","lastClientX","clientX","lastClientY","clientY","scrollTop","sectionNames","sortedPositions","sortByValue","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;IAEMC,mB;;;;;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,eAAe,EAAE,CAFN;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKA,UAAKC,OAAL,GAAe,KAAf;AACA,UAAKF,eAAL,GAAuB,CAAvB;AAEA,UAAKG,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AACA,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,uDAA3B;AAXe;AAYlB;;;;wCAGmB;AAChBE,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAAnC;AACAE,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC,KAAKE,eAAL,CAAqBL,IAArB,CAA0B,IAA1B,CAArC,EAFgB,CAGhB;;AACAE,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCb,CAAC,CAACgB,QAAF,CAAW,KAAKC,YAAL,CAAkBP,IAAlB,CAAuB,IAAvB,CAAX,EAAyC,GAAzC,EAA8C;AAAEQ,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAA9C,CAAlC;AACH;;;2CAEwB;AACrBP,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,SAA3B,EAAsC,KAAKN,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAAtC;AACAE,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,WAA3B,EAAwC,KAAKL,eAAL,CAAqBL,IAArB,CAA0B,IAA1B,CAAxC;AACAE,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKH,YAAL,CAAkBP,IAAlB,CAAuB,IAAvB,CAArC;AACAE,MAAAA,MAAM,CAACS,QAAP,CAAgB;AACZC,QAAAA,GAAG,EAAE,CADO;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAhB;AAIA,WAAKf,OAAL,GAAe,KAAf;AACH;;;gCAEWgB,G,EAAI;AACZ,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,GAAjB,CAAqB,UAACC,GAAD,EAAKC,KAAL;AAAA,eAAe,CAACD,GAAD,EAAMN,GAAG,CAACM,GAAD,CAAT,EAAgBN,GAAG,CAACG,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBO,KAAK,GAAC,CAAvB,CAAD,CAAnB,CAAf;AAAA,OAArB,CAAjB;AACAL,MAAAA,QAAQ,CAACM,IAAT,CAAc,UAACC,CAAD,EAAGC,CAAH;AAAA,eAASD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAjB;AAAA,OAAd;AACAR,MAAAA,QAAQ,CAACS,OAAT,CAAiB,UAAAX,GAAG,EAAI;AACtBC,QAAAA,MAAM,CAACD,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiB,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBY,QAA3B,CAAjB;AACD,OAFD;AAKA,aAAOX,MAAP;AACD;;;iCAGUY,C,EAAE;AACXA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAACjC,QAAAA,eAAe,EAAEM,MAAM,CAAC4B;AAAzB,OAAd;AACH;;;oCAGeH,C,EAAGI,E,EAAIC,O,EAAQ;AAAA;;AAAA,UACnBC,gBADmB,GACE,KAAKxC,KADP,CACnBwC,gBADmB;AAE3BC,MAAAA,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,EAA4BK,SAA5B,CAAsCC,GAAtC,CAA0C,KAA1C;;AAEA,UAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,YAAMzC,MAAM,GAAGoC,gBAAgB,CAACD,OAAD,CAAhB,GAA4B,EAA5B,GAAiC,CAAjC,GAAqCC,gBAAgB,CAACD,OAAD,CAAhB,GAA4B,EAAhF;AACA,QAAA,MAAI,CAACO,IAAL,CAAUC,SAAV,CAAoBC,UAApB,GAAiC,MAAI,CAAC/C,KAAL,CAAWG,MAA5C;AACAK,QAAAA,MAAM,CAACS,QAAP,CAAgB;AAAEC,UAAAA,GAAG,EAAEf,MAAP;AAAegB,UAAAA,QAAQ,EAAE;AAAzB,SAAhB;AACH,OAJD;;AAMA,WAAKgB,QAAL,CAAc;AAAChC,QAAAA,MAAM,EAAEqC,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,EAA4BW;AAArC,OAAd,EAAgEJ,MAAhE;AACAX,MAAAA,CAAC,CAACgB,eAAF;AACH;;;wCAGmB9C,M,EAAO;AACzB;AACE,UAAI,KAAK0C,IAAL,CAAUC,SAAd,EAAyB;AACvB,aAAKD,IAAL,CAAUC,SAAV,CAAoBC,UAApB,GAAiC5C,MAAjC;AACD,OAJsB,CAKvB;;AACH;;;kCAEa8B,C,EAAG;AACb,UAAI,KAAKjC,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aAAKkC,QAAL,CAAc,KAAKnC,KAAnB;AACD;AACF;;;oCAEaiC,C,EAAG;AACf,UAAI,CAAC,KAAKjC,KAAL,CAAWC,QAAhB,EAA0B;AACxB;AACA,aAAKkC,QAAL,CAAc,KAAKnC,KAAnB;AACA,aAAKkD,WAAL,GAAmBjB,CAAC,CAACkB,OAArB;AACA,aAAKC,WAAL,GAAmBnB,CAAC,CAACoB,OAArB;AACApB,QAAAA,CAAC,CAACC,cAAF;AACD;AACF;;;oCAEeD,C,EAAG;AACjB,UAAI,KAAKjC,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAK4C,IAAL,CAAUC,SAAV,CAAoBC,UAApB,IACG,CAAC,KAAKG,WAAN,IAAqB,KAAKA,WAAL,GAAmBjB,CAAC,CAACkB,OAA1C,CADH;AAEA,aAAKN,IAAL,CAAUC,SAAV,CAAoBQ,SAApB,IACG,CAAC,KAAKF,WAAN,IAAqB,KAAKA,WAAL,GAAmBnB,CAAC,CAACoB,OAA1C,CADH;AAED;AACF;;;6BAEM;AAAA;;AACL;AADK,UAEGd,gBAFH,GAEwB,KAAKxC,KAF7B,CAEGwC,gBAFH;AAAA,UAGGrC,eAHH,GAGuB,KAAKF,KAH5B,CAGGE,eAHH;AAIL,UAAMqD,YAAY,GAAGhC,MAAM,CAACC,IAAP,CAAYe,gBAAZ,CAArB;AACA,UAAMiB,eAAe,GAAG,KAAKC,WAAL,CAAiBlB,gBAAjB,CAAxB;AAGA,aACI;AACI,QAAA,SAAS,EAAC,eADd;AAEI,QAAA,SAAS,EAAE,KAAK7B,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAFf;AAGI,QAAA,WAAW,EAAE,KAAKK,eAAL,CAAqBL,IAArB,CAA0B,IAA1B,CAHjB;AAII,QAAA,GAAG,EAAC,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMKiD,YAAY,CAAC9B,GAAb,CAAiB,UAACa,OAAD,EAASX,KAAT;AAAA,eACd,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEY,gBAAgB,CAACD,OAAD,CADvB;AAEE,UAAA,OAAO,EAAEA,OAFX;AAGE,UAAA,QAAQ,EAAE,kBAACL,CAAD,EAAO;AAAC,YAAA,MAAI,CAAC5B,eAAL,CAAqB4B,CAArB,wBAAuCK,OAAvC,GAAkDA,OAAlD;AAA2D,WAH/E;AAIE,UAAA,GAAG,wBAAiBA,OAAjB,CAJL;AAKE,UAAA,eAAe,EAAEpC,eALnB;AAME,UAAA,QAAQ,EAAEsD,eAAe,CAAClB,OAAD,CAN3B;AAOE,UAAA,aAAa,EAAE,MAAI,CAAC/B,mBAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADc;AAAA,OAAjB,CANL,CADJ;AAqBH;;;;EAnI6BZ,KAAK,CAAC+D,S;;AAoIvC;AAED,eAAe5D,mBAAf","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport _ from 'lodash'\r\nimport NavBadge from './NavBadge';\r\n// import DragScroll from 'react-dragscroll';\r\n\r\nclass HorizontalScrollNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          dragging: false,\r\n          currentPosition: 0,\r\n          offset: 0,\r\n        };\r\n        this.current = false;\r\n        this.currentPosition = 0;\r\n\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n        this.sectionUpdateHandle = this.sectionUpdateHandle.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\r\n        window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\r\n        // add event listener on scroll with throttling to prevent excessive events being fired\r\n        window.addEventListener('scroll', _.throttle(this.scrollHandle.bind(this), 500, { trailing: true, leading: true }));\r\n    }\r\n\r\n      componentWillUnmount() {\r\n        window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\r\n        window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\r\n        window.removeEventListener('scroll', this.scrollHandle.bind(this));\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n        });\r\n        this.current = false;\r\n    }\r\n\r\n    sortByValue(obj){\r\n        const newObj = {};\r\n        const sortable = Object.keys(obj).map((key,index) => [key, obj[key], obj[Object.keys(obj)[index+1]]]);\r\n        sortable.sort((a,b) => a[1] - b[1]);\r\n        sortable.forEach(obj => {\r\n          newObj[obj[0]] = [obj[1], obj[2] ? obj[2] : Infinity];\r\n        });\r\n\r\n\r\n        return newObj;\r\n      }\r\n\r\n\r\n    scrollHandle(e){\r\n        e.preventDefault();\r\n        this.setState({currentPosition: window.scrollY});\r\n    }\r\n\r\n\r\n    handleSelection(e, id, section){\r\n        const { sectionPositions } = this.props;\r\n        document.getElementById(id).classList.add('red');\r\n\r\n        const moveTo = () => {\r\n            const offset = sectionPositions[section] < 50 ? 0 : sectionPositions[section] - 35;\r\n            this.refs.container.scrollLeft = this.state.offset;\r\n            window.scrollTo({ top: offset, behavior: 'smooth',});\r\n        }\r\n\r\n        this.setState({offset: document.getElementById(id).offsetLeft}, moveTo);\r\n        e.stopPropagation();\r\n    }\r\n\r\n\r\n    sectionUpdateHandle(offset){\r\n      // console.log('/////////////////////');\r\n        if (this.refs.container) {\r\n          this.refs.container.scrollLeft = offset;\r\n        }\r\n        // this.setState({offset});\r\n    }\r\n\r\n    mouseUpHandle(e) {\r\n        if (this.state.dragging) {\r\n          // const dragging = false;\r\n          this.setState(this.state);\r\n        }\r\n      }\r\n\r\n    mouseDownHandle(e) {\r\n        if (!this.state.dragging) {\r\n          // this.state.dragging = true;\r\n          this.setState(this.state);\r\n          this.lastClientX = e.clientX;\r\n          this.lastClientY = e.clientY;\r\n          e.preventDefault();\r\n        }\r\n      }\r\n\r\n      mouseMoveHandle(e) {\r\n        if (this.state.dragging) {\r\n          this.refs.container.scrollLeft -=\r\n            (-this.lastClientX + (this.lastClientX = e.clientX));\r\n          this.refs.container.scrollTop -=\r\n            (-this.lastClientY + (this.lastClientY = e.clientY));\r\n        }\r\n      }\r\n\r\n    render() {\r\n        // eslint-disable-next-line\r\n        const { sectionPositions } = this.props;\r\n        const { currentPosition } = this.state;\r\n        const sectionNames = Object.keys(sectionPositions);\r\n        const sortedPositions = this.sortByValue(sectionPositions);\r\n\r\n\r\n        return (\r\n            <div\r\n                className=\"selectSection\"\r\n                onMouseUp={this.mouseUpHandle.bind(this)}\r\n                onMouseMove={this.mouseMoveHandle.bind(this)}\r\n                ref=\"container\"\r\n            >\r\n                {sectionNames.map((section,index)  => (\r\n                    <NavBadge\r\n                      key={sectionPositions[section]}\r\n                      section={section}\r\n                      onSelect={(e) => {this.handleSelection(e, `$scroll-nav-${section}`, section)}}\r\n                      ref={`$scroll-nav-${section}`}\r\n                      currentPosition={currentPosition}\r\n                      interval={sortedPositions[section]}\r\n                      updateSection={this.sectionUpdateHandle}\r\n                    />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default HorizontalScrollNav;\r\n"]},"metadata":{},"sourceType":"module"}