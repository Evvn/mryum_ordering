{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Menu/Section.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Section =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Section, _React$Component);\n\n  function Section() {\n    _classCallCheck(this, Section);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Section).apply(this, arguments));\n  }\n\n  _createClass(Section, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          setSectionPosition = _this$props.setSectionPosition;\n      var position = ReactDOM.findDOMNode(this).getBoundingClientRect();\n      setSectionPosition(name, position);\n    }\n    /*processItem(){\n      const { tagsInUse, routeToItemDetail, menuSection } = this.props;\n      const tags = menuSection.fields.Tags;\n       // If menu item tags match any tags in filter\n      if (tagsInUse.length > 0 && tagsInUse.some(tag => tags.includes(tag))) {      \n        menu.push(menuItem);\n        itemIndex++;\n      } else if (tagsInUse.length === 0) {\n        // if no tags are in use, push non list item with tags\n        menu.push(\n          menuItem\n        );\n        itemIndex++;\n      }\n      }\n     processList(){\n     }\n     getSection(){\n      const { tagsInUse, routeToItemDetail, menuSection } = this.props;\n      const hasTag = menuSection.fields.Tags ? true : false;\n      const tags = menuSection.fields.Tags;\n      const menuItem = (\n        <MenuItem\n          key={menuSection.id}\n          item={menuSection.fields}\n          itemIndex={itemIndex}\n          lang={lang}\n          onClick={(e) => {this.routeToItemDetails(e, menuSection.id, lang)}}\n        />\n      );\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // key={menuSections[section].fields['Sections']}\n      // name={menuSections[section].fields['Sections']}\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          index = _this$props2.index;\n      var subSection = \"\";\n\n      if (name.indexOf(\"%\") !== -1) {\n        subSection = name.substring(name.indexOf('%') + 1, name.length);\n        name = name.substring(0, name.indexOf('%'));\n      }\n\n      return React.createElement(\"h2\", {\n        className: \"section \".concat(index === 0 ? 'sectionTaller' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, name, React.createElement(\"span\", {\n        className: \"subSection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, subSection));\n    }\n  }]);\n\n  return Section;\n}(React.Component);\n\nexport default Section;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Menu/Section.js"],"names":["React","ReactDOM","Section","props","name","setSectionPosition","position","findDOMNode","getBoundingClientRect","index","subSection","indexOf","substring","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,O;;;;;;;;;;;;;wCAEe;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACTC,IADS,eACTA,IADS;AAAA,UACHC,kBADG,eACHA,kBADG;AAEjB,UAAMC,QAAQ,GAAGL,QAAQ,CACtBM,WADc,CACF,IADE,EAEdC,qBAFc,EAAjB;AAGAH,MAAAA,kBAAkB,CAACD,IAAD,EAAOE,QAAP,CAAlB;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAsCS;AAGP;AACA;AAJO,yBAKe,KAAKH,KALpB;AAAA,UAKDC,IALC,gBAKDA,IALC;AAAA,UAKKK,KALL,gBAKKA,KALL;AAMP,UAAIC,UAAU,GAAG,EAAjB;;AACA,UAAIN,IAAI,CAACO,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC5BD,QAAAA,UAAU,GAAGN,IAAI,CAACQ,SAAL,CAAgBR,IAAI,CAACO,OAAL,CAAa,GAAb,IAAoB,CAApC,EAAwCP,IAAI,CAACS,MAA7C,CAAb;AACAT,QAAAA,IAAI,GAAGA,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAkBR,IAAI,CAACO,OAAL,CAAa,GAAb,CAAlB,CAAP;AACD;;AAED,aACE;AAAI,QAAA,SAAS,oBAAcF,KAAK,KAAK,CAAV,GAAc,eAAd,GAAgC,EAA9C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsEL,IAAtE,EAA4E;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BM,UAA/B,CAA5E,CADF;AAGD;;;;EA/DmBV,KAAK,CAACc,S;;AAkE5B,eAAeZ,OAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom';\n\nclass Section extends React.Component {\n\n  componentDidMount(){\n    const { name, setSectionPosition } = this.props;\n    const position = ReactDOM\n      .findDOMNode(this)\n      .getBoundingClientRect();\n    setSectionPosition(name, position);\n  }\n\n  /*processItem(){\n    const { tagsInUse, routeToItemDetail, menuSection } = this.props;\n    const tags = menuSection.fields.Tags;\n\n    // If menu item tags match any tags in filter\n    if (tagsInUse.length > 0 && tagsInUse.some(tag => tags.includes(tag))) {      \n      menu.push(menuItem);\n      itemIndex++;\n    } else if (tagsInUse.length === 0) {\n      // if no tags are in use, push non list item with tags\n      menu.push(\n        menuItem\n      );\n      itemIndex++;\n    }\n\n\n  }\n\n  processList(){\n\n  }\n\n  getSection(){\n    const { tagsInUse, routeToItemDetail, menuSection } = this.props;\n    const hasTag = menuSection.fields.Tags ? true : false;\n    const tags = menuSection.fields.Tags;\n    const menuItem = (\n      <MenuItem\n        key={menuSection.id}\n        item={menuSection.fields}\n        itemIndex={itemIndex}\n        lang={lang}\n        onClick={(e) => {this.routeToItemDetails(e, menuSection.id, lang)}}\n      />\n    );\n  }*/\n\n  render() {\n\n\n    // key={menuSections[section].fields['Sections']}\n    // name={menuSections[section].fields['Sections']}\n    let { name, index } = this.props\n    let subSection = \"\"\n    if (name.indexOf(\"%\") !== -1) {\n      subSection = name.substring((name.indexOf('%') + 1), name.length)\n      name = name.substring(0, name.indexOf('%'))\n    }\n\n    return (\n      <h2 className={`section ${ index === 0 ? 'sectionTaller' : '' }` } >{ name }<span className=\"subSection\">{ subSection }</span></h2>\n    )\n  }\n}\n\nexport default Section\n"]},"metadata":{},"sourceType":"module"}