{"ast":null,"code":"export var getSubtotals = function getSubtotals(item) {\n  console.log('get subtotals');\n  var itemClone = item;\n  var subtotal = 0;\n  item.addOns.map(function (addOn) {\n    subtotal = subtotal + addOn.price;\n  });\n  itemClone.subtotal = (item.price + subtotal) * item.quantity;\n  return itemClone;\n};\nexport var buildItemTemplate = function buildItemTemplate(item, quantity) {\n  return {\n    id: item.id,\n    name: item.name,\n    addOns: [],\n    modifiers: [],\n    price: item.price,\n    quantity: quantity\n  };\n};\nexport var addToOrder = function addToOrder(oldOrderState, rawItem, quantity) {\n  var items = oldOrderState.items,\n      subtotal = oldOrderState.subtotal;\n  var newItem = buildItemTemplate(rawItem, quantity);\n  var added = false;\n  var newItems = [];\n  var orderTotal = 0;\n  console.log(oldOrderState, newItem);\n  items.map(function (item) {\n    var itemClone = item;\n\n    if (item.id === newItem.id) {\n      console.log(itemClone, newItem);\n      itemClone.quantity = itemClone.quanity + newItem.quantity;\n      added = true;\n    }\n\n    var itemOutput = getSubtotals(itemClone);\n    orderTotal = orderTotal + itemOutput.subtotal;\n    newItems.push(itemOutput);\n  });\n\n  if (!added) {\n    var itemOutput = getSubtotals(newItem);\n    orderTotal = orderTotal + itemOutput.subtotal;\n    newItems.push(itemOutput);\n  }\n\n  return {\n    items: newItems,\n    orderTotal: orderTotal\n  };\n};\nexport var removeFromOrder = function removeFromOrder(oldOrderState, itemToRemove, quantity) {\n  var items = oldOrderState.items,\n      subtotal = oldOrderState.subtotal;\n  var newItems = [];\n  var orderTotal = 0;\n  items.map(function (item) {\n    var itemClone = item;\n\n    if (item.id !== itemToRemove.id) {\n      newItems.push(itemClone);\n      orderTotal = orderTotal + itemClone.subtotal;\n    } else {\n      orderTotal = orderTotal - itemClone.subtotal;\n    }\n  });\n  return {\n    items: newItems,\n    orderTotal: orderTotal\n  };\n};","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/utils/orderUtils.js"],"names":["getSubtotals","item","console","log","itemClone","subtotal","addOns","map","addOn","price","quantity","buildItemTemplate","id","name","modifiers","addToOrder","oldOrderState","rawItem","items","newItem","added","newItems","orderTotal","quanity","itemOutput","push","removeFromOrder","itemToRemove"],"mappings":"AACA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,MAAMC,SAAS,GAAGH,IAAlB;AACA,MAAII,QAAQ,GAAG,CAAf;AACAJ,EAAAA,IAAI,CAACK,MAAL,CAAYC,GAAZ,CAAgB,UAAAC,KAAK,EAAI;AACrBH,IAAAA,QAAQ,GAAGA,QAAQ,GAAGG,KAAK,CAACC,KAA5B;AACH,GAFD;AAIAL,EAAAA,SAAS,CAACC,QAAV,GAAqB,CAACJ,IAAI,CAACQ,KAAL,GAAaJ,QAAd,IAA0BJ,IAAI,CAACS,QAApD;AACA,SAAON,SAAP;AACH,CAVM;AAYP,OAAO,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,IAAD,EAAOS,QAAP,EAAoB;AACjD,SAAO;AACHE,IAAAA,EAAE,EAAEX,IAAI,CAACW,EADN;AAEHC,IAAAA,IAAI,EAAEZ,IAAI,CAACY,IAFR;AAGHP,IAAAA,MAAM,EAAE,EAHL;AAIHQ,IAAAA,SAAS,EAAE,EAJR;AAKHL,IAAAA,KAAK,EAAER,IAAI,CAACQ,KALT;AAMHC,IAAAA,QAAQ,EAARA;AANG,GAAP;AAQH,CATM;AAWP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,aAAD,EAAgBC,OAAhB,EAAyBP,QAAzB,EAAsC;AAAA,MACpDQ,KADoD,GAChCF,aADgC,CACpDE,KADoD;AAAA,MAC7Cb,QAD6C,GAChCW,aADgC,CAC7CX,QAD6C;AAG5D,MAAMc,OAAO,GAAGR,iBAAiB,CAACM,OAAD,EAAUP,QAAV,CAAjC;AAEA,MAAIU,KAAK,GAAG,KAAZ;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACApB,EAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ,EAA2BG,OAA3B;AACAD,EAAAA,KAAK,CAACX,GAAN,CAAU,UAAAN,IAAI,EAAI;AACd,QAAIG,SAAS,GAAGH,IAAhB;;AACA,QAAGA,IAAI,CAACW,EAAL,KAAYO,OAAO,CAACP,EAAvB,EAA0B;AACtBV,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ,EAAuBe,OAAvB;AACAf,MAAAA,SAAS,CAACM,QAAV,GAAqBN,SAAS,CAACmB,OAAV,GAAoBJ,OAAO,CAACT,QAAjD;AACAU,MAAAA,KAAK,GAAG,IAAR;AACH;;AACD,QAAMI,UAAU,GAAGxB,YAAY,CAACI,SAAD,CAA/B;AACAkB,IAAAA,UAAU,GAAGA,UAAU,GAAGE,UAAU,CAACnB,QAArC;AACAgB,IAAAA,QAAQ,CAACI,IAAT,CAAcD,UAAd;AACH,GAVD;;AAYA,MAAG,CAACJ,KAAJ,EAAU;AACN,QAAMI,UAAU,GAAGxB,YAAY,CAACmB,OAAD,CAA/B;AACAG,IAAAA,UAAU,GAAGA,UAAU,GAAGE,UAAU,CAACnB,QAArC;AACAgB,IAAAA,QAAQ,CAACI,IAAT,CAAcD,UAAd;AACH;;AAGD,SAAO;AACHN,IAAAA,KAAK,EAAEG,QADJ;AAEHC,IAAAA,UAAU,EAAVA;AAFG,GAAP;AAKH,CAjCM;AAmCP,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACV,aAAD,EAAgBW,YAAhB,EAA8BjB,QAA9B,EAA2C;AAAA,MAC9DQ,KAD8D,GAC1CF,aAD0C,CAC9DE,KAD8D;AAAA,MACvDb,QADuD,GAC1CW,aAD0C,CACvDX,QADuD;AAGtE,MAAMgB,QAAQ,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACAJ,EAAAA,KAAK,CAACX,GAAN,CAAU,UAAAN,IAAI,EAAI;AACd,QAAIG,SAAS,GAAGH,IAAhB;;AACA,QAAGA,IAAI,CAACW,EAAL,KAAYe,YAAY,CAACf,EAA5B,EAA+B;AAC3BS,MAAAA,QAAQ,CAACI,IAAT,CAAcrB,SAAd;AACAkB,MAAAA,UAAU,GAAGA,UAAU,GAAGlB,SAAS,CAACC,QAApC;AACH,KAHD,MAII;AACAiB,MAAAA,UAAU,GAAGA,UAAU,GAAGlB,SAAS,CAACC,QAApC;AACH;AAEJ,GAVD;AAYA,SAAO;AACHa,IAAAA,KAAK,EAAEG,QADJ;AAEHC,IAAAA,UAAU,EAAVA;AAFG,GAAP;AAKH,CAtBM","sourcesContent":["\nexport const getSubtotals = item => {\n    console.log('get subtotals')\n    const itemClone = item;\n    let subtotal = 0;\n    item.addOns.map(addOn => {\n        subtotal = subtotal + addOn.price;\n    });\n\n    itemClone.subtotal = (item.price + subtotal) * item.quantity;\n    return itemClone;\n}\n\nexport const buildItemTemplate = (item, quantity) => {\n    return {\n        id: item.id,\n        name: item.name,\n        addOns: [],\n        modifiers: [],\n        price: item.price,\n        quantity,\n    }\n}\n\nexport const addToOrder = (oldOrderState, rawItem, quantity) => {\n    const { items, subtotal } = oldOrderState;\n    \n    const newItem = buildItemTemplate(rawItem, quantity);\n\n    let added = false;\n    const newItems = [];\n    let orderTotal = 0;\n    console.log(oldOrderState, newItem)\n    items.map(item => {\n        let itemClone = item;\n        if(item.id === newItem.id){\n            console.log(itemClone, newItem)\n            itemClone.quantity = itemClone.quanity + newItem.quantity;\n            added = true;\n        }\n        const itemOutput = getSubtotals(itemClone);\n        orderTotal = orderTotal + itemOutput.subtotal;\n        newItems.push(itemOutput);\n    });\n    \n    if(!added){\n        const itemOutput = getSubtotals(newItem);\n        orderTotal = orderTotal + itemOutput.subtotal;\n        newItems.push(itemOutput);\n    }\n\n\n    return {\n        items: newItems,\n        orderTotal\n    };\n\n};\n\nexport const removeFromOrder = (oldOrderState, itemToRemove, quantity) => {\n    const { items, subtotal } = oldOrderState;\n\n    const newItems = [];\n    let orderTotal = 0;\n    items.map(item => {\n        let itemClone = item;\n        if(item.id !== itemToRemove.id){\n            newItems.push(itemClone);\n            orderTotal = orderTotal + itemClone.subtotal;\n        }\n        else{\n            orderTotal = orderTotal - itemClone.subtotal;\n        }\n        \n    });\n\n    return {\n        items: newItems,\n        orderTotal\n    };\n\n};\n\n"]},"metadata":{},"sourceType":"module"}