{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import DragScroll from 'react-dragscroll';\n\nvar HorizontalScrollNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalScrollNav, _React$Component);\n\n  function HorizontalScrollNav(props) {\n    var _this;\n\n    _classCallCheck(this, HorizontalScrollNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorizontalScrollNav).call(this, props));\n    _this.state = {\n      dragging: false,\n      scrollPosition: 0,\n      current: false\n    };\n    return _this;\n  }\n\n  _createClass(HorizontalScrollNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.addEventListener('scroll', this.scrollHandle.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.removeEventListener('scroll', this.scrollHandle.bind(this));\n    }\n  }, {\n    key: \"scrollHandle\",\n    value: function scrollHandle(e) {\n      this.setState({\n        scrollPosition: window.scrollY\n      });\n    }\n  }, {\n    key: \"handleSectionChange\",\n    value: function handleSectionChange(ref) {\n      var current = this.state.current;\n\n      if (!current) {\n        this.setState({\n          current: ref\n        });\n      } else if (current !== ref) {\n        this.refs.container.scrollLeft = this[ref].offsetLeft;\n        this.setState({\n          current: ref\n        });\n      }\n    }\n  }, {\n    key: \"mouseUpHandle\",\n    value: function mouseUpHandle(e) {\n      if (this.state.dragging) {\n        // const dragging = false;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"mouseDownHandle\",\n    value: function mouseDownHandle(e) {\n      if (!this.state.dragging) {\n        // this.state.dragging = true;\n        this.setState(this.state);\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"mouseMoveHandle\",\n    value: function mouseMoveHandle(e) {\n      if (this.state.dragging) {\n        this.refs.container.scrollLeft -= -this.lastClientX + (this.lastClientX = e.clientX);\n        this.refs.container.scrollTop -= -this.lastClientY + (this.lastClientY = e.clientY);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // eslint-disable-next-line\n      var _this$props = this.props,\n          sectionPositions = _this$props.sectionPositions,\n          sectionNames = _this$props.sectionNames;\n      var sections = Object.keys(sectionPositions);\n      return React.createElement(\"div\", {\n        className: \"selectSection\",\n        onMouseUp: this.mouseUpHandle.bind(this),\n        onMouseMove: this.mouseMoveHandle.bind(this),\n        ref: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, sections.map(function (section, index) {\n        var y = _this2.state.scrollPosition;\n        var sectionPosition = sectionPositions[section];\n        var nextPosition = sectionPositions[sections[index + 1]];\n        var nextValue = nextPosition ? nextPosition : -1;\n        var className = y >= sectionPosition && y < nextValue ? \"red\" : '';\n        var go = y >= sectionPosition && y < nextValue ? _this2.handleSectionChange(\"$scroll-nav-\".concat(section)) : '';\n        return React.createElement(\"span\", {\n          ref: function ref(_ref) {\n            return _this2[\"$scroll-nav-\".concat(section)] = _ref;\n          },\n          id: \"$scroll-nav-\".concat(section),\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, section);\n      }));\n    }\n  }]);\n\n  return HorizontalScrollNav;\n}(React.Component);\n\n;\nexport default HorizontalScrollNav;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js"],"names":["React","ReactDOM","HorizontalScrollNav","props","state","dragging","scrollPosition","current","window","addEventListener","mouseUpHandle","bind","mouseMoveHandle","scrollHandle","removeEventListener","e","setState","scrollY","ref","refs","container","scrollLeft","offsetLeft","lastClientX","clientX","lastClientY","clientY","preventDefault","scrollTop","sectionPositions","sectionNames","sections","Object","keys","map","section","index","y","sectionPosition","nextPosition","nextValue","className","go","handleSectionChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import DragScroll from 'react-dragscroll';\n\nclass HorizontalScrollNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          dragging: false,\n          scrollPosition: 0,\n          current: false,\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n        window.addEventListener('scroll', this.scrollHandle.bind(this));\n    }\n\n      componentWillUnmount() {\n        window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n        window.removeEventListener('scroll', this.scrollHandle.bind(this));\n    }\n\n    scrollHandle(e){\n        this.setState({scrollPosition: window.scrollY});\n    }\n\n    handleSectionChange(ref){\n        const { current } = this.state;\n        if (!current){\n            this.setState({current: ref});\n        } else if(current !== ref){\n                this.refs.container.scrollLeft = this[ref].offsetLeft\n                this.setState({current: ref});\n        }\n    }\n\n    mouseUpHandle(e) {\n        if (this.state.dragging) {\n          // const dragging = false;\n          this.setState(this.state);\n        }\n      }\n\n    mouseDownHandle(e) {\n        if (!this.state.dragging) {\n          // this.state.dragging = true;\n          this.setState(this.state);\n          this.lastClientX = e.clientX;\n          this.lastClientY = e.clientY;\n          e.preventDefault();\n        }\n      }\n\n      mouseMoveHandle(e) {\n        if (this.state.dragging) {\n          this.refs.container.scrollLeft -=\n            (-this.lastClientX + (this.lastClientX = e.clientX));\n          this.refs.container.scrollTop -=\n            (-this.lastClientY + (this.lastClientY = e.clientY));\n        }\n      }\n\n    render() {\n        // eslint-disable-next-line\n        const { sectionPositions, sectionNames } = this.props;\n        const sections = Object.keys(sectionPositions);\n        return (\n            <div\n                className=\"selectSection\"\n                onMouseUp={this.mouseUpHandle.bind(this)}\n                onMouseMove={this.mouseMoveHandle.bind(this)}\n                ref=\"container\">\n                {sections.map((section,index)  => {\n                    const y = this.state.scrollPosition;\n                    const sectionPosition = sectionPositions[section];\n                    const nextPosition = sectionPositions[sections[index + 1]];\n                    const nextValue = nextPosition ? nextPosition : -1;\n                    const className = (y >= sectionPosition && y < nextValue) ? \"red\" : '';\n                    const go = y >= sectionPosition && y < nextValue ? this.handleSectionChange(`$scroll-nav-${section}`) : '';\n\n                    return (\n                        <span  \n                            ref={(ref) => this[`$scroll-nav-${section}`]=ref}\n                            id={`$scroll-nav-${section}`}\n                            className={className}>\n                            {section}\n                        </span>\n                    );\n                })}\n            </div>\n        );\n    }\n};\n\nexport default HorizontalScrollNav;\n"]},"metadata":{},"sourceType":"module"}