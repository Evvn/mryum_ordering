{"ast":null,"code":"// import { getToken } from '../Auth';\n// provides an easy way for saga to call the BFF\nvar callBff = function callBff(suffix, type, body) {\n  var returnJson = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var payload = {};\n  payload.method = type;\n  payload.headers = {\n    'Content-Type': 'application/json' // Authorization: `bearer ${getToken()}`,\n\n  };\n\n  if (body) {\n    payload.body = JSON.stringify(body);\n  }\n\n  return fetch(\"\".concat(process.env.REACT_APP_BFF_BASE_URL, \"/yumbff/\").concat(suffix), payload).then(function (response) {\n    if (response.ok) {\n      if (returnJson) {\n        return response.json();\n      }\n\n      return response;\n    }\n\n    throw Error(\"Api request failed with status code: \".concat(response.status));\n  });\n};\n\nexport default callBff;","map":{"version":3,"sources":["D:\\Documents\\GitHub\\mryum-avc\\src\\integration\\callBff.js"],"names":["callBff","suffix","type","body","returnJson","payload","method","headers","JSON","stringify","fetch","process","env","REACT_APP_BFF_BASE_URL","then","response","ok","json","Error","status"],"mappings":"AAAA;AAEA;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf,EAA2C;AAAA,MAAtBC,UAAsB,uEAAT,IAAS;AAC1D,MAAMC,OAAO,GAAG,EAAhB;AACAA,EAAAA,OAAO,CAACC,MAAR,GAAiBJ,IAAjB;AACAG,EAAAA,OAAO,CAACE,OAAR,GAAkB;AAChB,oBAAgB,kBADA,CAEhB;;AAFgB,GAAlB;;AAKA,MAAIJ,IAAJ,EAAU;AACRE,IAAAA,OAAO,CAACF,IAAR,GAAeK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAf;AACD;;AAED,SAAOO,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,sBAAhB,qBAAiDZ,MAAjD,GAA2DI,OAA3D,CAAL,CAAyES,IAAzE,CAA8E,UAACC,QAAD,EAAc;AACjG,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,UAAIZ,UAAJ,EAAgB;AACd,eAAOW,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,aAAOF,QAAP;AACD;;AACD,UAAMG,KAAK,gDAAyCH,QAAQ,CAACI,MAAlD,EAAX;AACD,GARM,CAAP;AASA,CArBD;;AAuBA,eAAenB,OAAf","sourcesContent":["// import { getToken } from '../Auth';\r\n\r\n// provides an easy way for saga to call the BFF\r\nconst callBff = (suffix, type, body, returnJson = true) => {\r\n const payload = {};\r\n payload.method = type;\r\n payload.headers = {\r\n   'Content-Type': 'application/json',\r\n   // Authorization: `bearer ${getToken()}`,\r\n };\r\n\r\n if (body) {\r\n   payload.body = JSON.stringify(body);\r\n }\r\n\r\n return fetch(`${process.env.REACT_APP_BFF_BASE_URL}/yumbff/${suffix}`, payload).then((response) => {\r\n   if (response.ok) {\r\n     if (returnJson) {\r\n       return response.json();\r\n     }\r\n     return response;\r\n   }\r\n   throw Error(`Api request failed with status code: ${response.status}`);\r\n });\r\n};\r\n\r\nexport default callBff;\r\n"]},"metadata":{},"sourceType":"module"}