{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Documents\\\\GitHub\\\\mryum-avc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getVenueNames),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getVenues),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher);\n\nimport * as actionTypes from '../../components/Common/actions/actionTypes/actionTypes.js'; // eslint-disable-next-line\n\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport callBff from '../callBff.js';\nexport function getVenueNames(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function getVenueNames$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return callBff(\"venues\", 'POST', {\n            category: 'list'\n          }).then(function (response) {\n            return response;\n          });\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return put({\n            type: actionTypes.GET_VENUE_NAMES_SUCCESS,\n            res: res\n          });\n\n        case 6:\n          _context.next = 14;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          window.location = '/notfound';\n          _context.next = 14;\n          return put({\n            type: actionTypes.GET_VENUE_NAMES_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\nexport function getVenues(action) {\n  var res;\n  return _regeneratorRuntime.wrap(function getVenues$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return callBff(\"venues\", 'POST', {\n            category: 'brunch'\n          }).then(function (response) {\n            return response;\n          });\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: actionTypes.GET_VENUES_SUCCESS,\n            res: res\n          });\n\n        case 6:\n          _context2.next = 14;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          window.location = '/notfound';\n          _context2.next = 14;\n          return put({\n            type: actionTypes.GET_VENUES_FAILURE,\n            error: _context2.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\nexport function actionWatcher() {\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [takeLatest(actionTypes.GET_VENUE_NAMES_REQUEST, getVenueNames), takeLatest(actionTypes.GET_VENUES_REQUEST, getVenues)];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:\\Documents\\GitHub\\mryum-avc\\src\\integration\\sagas\\commonIntegration.js"],"names":["getVenueNames","getVenues","actionWatcher","actionTypes","takeLatest","put","select","callBff","action","category","then","response","res","type","GET_VENUE_NAMES_SUCCESS","console","log","window","location","GET_VENUE_NAMES_FAILURE","error","GET_VENUES_SUCCESS","GET_VENUES_FAILURE","GET_VENUE_NAMES_REQUEST","GET_VENUES_REQUEST"],"mappings":";;;;yBAKiBA,a;;;yBAkBAC,S;;;yBAkBAC,a;;AAzCjB,OAAO,KAAKC,WAAZ,MAA6B,4DAA7B,C,CACA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,SAAUP,aAAV,CAAwBQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES,iBAAMD,OAAO,WAAW,MAAX,EAAmB;AAACE,YAAAA,QAAQ,EAAE;AAAX,WAAnB,CAAP,CACfC,IADe,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAJ;AAAA,WADE,CAAN;;AAFT;AAEGC,UAAAA,GAFH;AAAA;AAID,iBAAMP,GAAG,CAAC;AACRQ,YAAAA,IAAI,EAAEV,WAAW,CAACW,uBADV;AAERF,YAAAA,GAAG,EAAHA;AAFQ,WAAD,CAAT;;AAJC;AAAA;AAAA;;AAAA;AAAA;AAAA;AASHG,UAAAA,OAAO,CAACC,GAAR;AACAC,UAAAA,MAAM,CAACC,QAAP,GAAkB,WAAlB;AAVG;AAWH,iBAAMb,GAAG,CAAC;AACRQ,YAAAA,IAAI,EAAEV,WAAW,CAACgB,uBADV;AAERC,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBP,OAAO,SAAUnB,SAAV,CAAoBO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES,iBAAMD,OAAO,WAAW,MAAX,EAAmB;AAACE,YAAAA,QAAQ,EAAE;AAAX,WAAnB,CAAP,CACfC,IADe,CACV,UAAAC,QAAQ;AAAA,mBAAIA,QAAJ;AAAA,WADE,CAAN;;AAFT;AAEGC,UAAAA,GAFH;AAAA;AAID,iBAAMP,GAAG,CAAC;AACRQ,YAAAA,IAAI,EAAEV,WAAW,CAACkB,kBADV;AAERT,YAAAA,GAAG,EAAHA;AAFQ,WAAD,CAAT;;AAJC;AAAA;AAAA;;AAAA;AAAA;AAAA;AASHG,UAAAA,OAAO,CAACC,GAAR;AACAC,UAAAA,MAAM,CAACC,QAAP,GAAkB,WAAlB;AAVG;AAWH,iBAAMb,GAAG,CAAC;AACRQ,YAAAA,IAAI,EAAEV,WAAW,CAACmB,kBADV;AAERF,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBP,OAAO,SAAUlB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,CACJE,UAAU,CAACD,WAAW,CAACoB,uBAAb,EAAsCvB,aAAtC,CADN,EAEJI,UAAU,CAACD,WAAW,CAACqB,kBAAb,EAAiCvB,SAAjC,CAFN,CAAN;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as actionTypes from '../../components/Common/actions/actionTypes/actionTypes.js';\r\n// eslint-disable-next-line\r\nimport { takeLatest, put, select } from 'redux-saga/effects';\r\nimport callBff from '../callBff.js'\r\n\r\nexport function* getVenueNames(action) {\r\n  try {\r\n    const res = yield callBff(`venues`, 'POST', {category: 'list'})\r\n      .then(response => response)\r\n      yield put({\r\n        type: actionTypes.GET_VENUE_NAMES_SUCCESS,\r\n        res,\r\n      })\r\n  } catch (error) {\r\n    console.log(error)\r\n    window.location = '/notfound'\r\n    yield put({\r\n      type: actionTypes.GET_VENUE_NAMES_FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* getVenues(action) {\r\n  try {\r\n    const res = yield callBff(`venues`, 'POST', {category: 'brunch'})\r\n      .then(response => response)\r\n      yield put({\r\n        type: actionTypes.GET_VENUES_SUCCESS,\r\n        res,\r\n      })\r\n  } catch (error) {\r\n    console.log(error)\r\n    window.location = '/notfound'\r\n    yield put({\r\n      type: actionTypes.GET_VENUES_FAILURE,\r\n      error,\r\n    })\r\n  }\r\n}\r\n\r\nexport function* actionWatcher() {\r\n  yield [\r\n    takeLatest(actionTypes.GET_VENUE_NAMES_REQUEST, getVenueNames),\r\n    takeLatest(actionTypes.GET_VENUES_REQUEST, getVenues),\r\n  ]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}