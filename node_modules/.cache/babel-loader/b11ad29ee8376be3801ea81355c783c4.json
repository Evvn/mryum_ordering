{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Common/NavBadge.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nvar NavBadge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavBadge, _React$Component);\n\n  function NavBadge() {\n    _classCallCheck(this, NavBadge);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NavBadge).apply(this, arguments));\n  }\n\n  _createClass(NavBadge, [{\n    key: \"componentDidMount\",\n    // constructor(props) {\n    //   super(props);\n    //\n    //   this.state = {\n    //     alertedParent: false\n    //   }\n    // }\n    value: function componentDidMount() {\n      if (this.className === 'red') {\n        var updateSection = this.props.updateSection;\n        var offset = ReactDOM.findDOMNode(this).offsetLeft; // console.log(offset);\n\n        updateSection(offset);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // const {alertedParent} = this.state;\n      var offset = ReactDOM.findDOMNode(this).offsetLeft; // console.log(offset, this.props.section);\n\n      if (this.className === 'red') {\n        // this.setState({alertedParent: true});\n        var updateSection = this.props.updateSection;\n        updateSection(offset);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line\n      var _this$props = this.props,\n          section = _this$props.section,\n          onSelect = _this$props.onSelect,\n          currentPosition = _this$props.currentPosition,\n          interval = _this$props.interval;\n      this.className = currentPosition >= interval[0] - 50 && currentPosition < interval[1] - 50 ? 'red' : '';\n      return React.createElement(AnchorLink, {\n        href: \"#$scroll-nav-\".concat(section),\n        onClick: function onClick(e) {\n          onSelect(e);\n        },\n        key: uuid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          cursor: 'pointer'\n        },\n        id: \"$scroll-nav-\".concat(section),\n        key: uuid(),\n        className: this.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, section));\n    }\n  }]);\n\n  return NavBadge;\n}(React.Component);\n\nexport default NavBadge;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Common/NavBadge.js"],"names":["React","ReactDOM","uuid","AnchorLink","NavBadge","className","updateSection","props","offset","findDOMNode","offsetLeft","section","onSelect","currentPosition","interval","e","cursor","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;IAEMC,Q;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;wCAEoB;AAClB,UAAI,KAAKC,SAAL,KAAmB,KAAvB,EAA8B;AAAA,YACrBC,aADqB,GACJ,KAAKC,KADD,CACrBD,aADqB;AAE5B,YAAME,MAAM,GAAGP,QAAQ,CAACQ,WAAT,CAAqB,IAArB,EAA2BC,UAA1C,CAF4B,CAG5B;;AACAJ,QAAAA,aAAa,CAACE,MAAD,CAAb;AACD;AACF;;;yCAEoB;AACnB;AACA,UAAMA,MAAM,GAAGP,QAAQ,CAACQ,WAAT,CAAqB,IAArB,EAA2BC,UAA1C,CAFmB,CAGnB;;AACA,UAAI,KAAKL,SAAL,KAAmB,KAAvB,EAA8B;AAC5B;AAD4B,YAErBC,aAFqB,GAEJ,KAAKC,KAFD,CAErBD,aAFqB;AAG5BA,QAAAA,aAAa,CAACE,MAAD,CAAb;AACD;AACF;;;6BAEQ;AACP;AADO,wBAEgD,KAAKD,KAFrD;AAAA,UAEAI,OAFA,eAEAA,OAFA;AAAA,UAESC,QAFT,eAESA,QAFT;AAAA,UAEmBC,eAFnB,eAEmBA,eAFnB;AAAA,UAEoCC,QAFpC,eAEoCA,QAFpC;AAGP,WAAKT,SAAL,GAAiBQ,eAAe,IAAIC,QAAQ,CAAC,CAAD,CAAR,GAAc,EAAjC,IAAuCD,eAAe,GAAGC,QAAQ,CAAC,CAAD,CAAR,GAAc,EAAvE,GAA4E,KAA5E,GAAoF,EAArG;AAEA,aACE,oBAAC,UAAD;AAAY,QAAA,IAAI,yBAAkBH,OAAlB,CAAhB;AAA6C,QAAA,OAAO,EAAE,iBAACI,CAAD,EAAO;AACzDH,UAAAA,QAAQ,CAACG,CAAD,CAAR;AACC,SAFL;AAEO,QAAA,GAAG,EAAEb,IAAI,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAM,QAAA,KAAK,EAAE;AACPc,UAAAA,MAAM,EAAE;AADD,SAAb;AAGE,QAAA,EAAE,wBAAiBL,OAAjB,CAHJ;AAGgC,QAAA,GAAG,EAAET,IAAI,EAHzC;AAG6C,QAAA,SAAS,EAAE,KAAKG,SAH7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKM,OALL,CAJF,CADF;AAcD;;;;EAhDoBX,KAAK,CAACiB,S;;AAmD7B,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport uuid from 'uuid/v4';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nclass NavBadge extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //\n  //   this.state = {\n  //     alertedParent: false\n  //   }\n  // }\n\n  componentDidMount() {\n    if (this.className === 'red') {\n      const {updateSection} = this.props;\n      const offset = ReactDOM.findDOMNode(this).offsetLeft;\n      // console.log(offset);\n      updateSection(offset);\n    }\n  }\n\n  componentDidUpdate() {\n    // const {alertedParent} = this.state;\n    const offset = ReactDOM.findDOMNode(this).offsetLeft;\n    // console.log(offset, this.props.section);\n    if (this.className === 'red') {\n      // this.setState({alertedParent: true});\n      const {updateSection} = this.props;\n      updateSection(offset);\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line\n    const {section, onSelect, currentPosition, interval} = this.props;\n    this.className = currentPosition >= interval[0] - 50 && currentPosition < interval[1] - 50 ? 'red' : '';\n\n    return (\n      <AnchorLink href={`#$scroll-nav-${section}`} onClick={(e) => {\n          onSelect(e)\n          }} key={uuid()}\n      >\n        <span style={{\n              cursor: 'pointer'\n            }}\n          id={`$scroll-nav-${section}`} key={uuid()} className={this.className}\n        >\n            {section}\n        </span>\n      </AnchorLink>\n    );\n  }\n}\n\nexport default NavBadge;\n"]},"metadata":{},"sourceType":"module"}