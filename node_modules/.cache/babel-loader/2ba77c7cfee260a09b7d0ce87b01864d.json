{"ast":null,"code":"import _objectSpread from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Menu/Filter.js\";\nimport React from 'react';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"toggleFilterMenu\",\n    value: function toggleFilterMenu(e) {\n      document.querySelector('.filterList').classList.toggle('open');\n\n      if (document.querySelector('.filterList').classList.contains('open')) {\n        document.querySelector('.filterText').textContent = 'close';\n      } else {\n        document.querySelector('.filterText').textContent = 'filter';\n      } // document.querySelector('.hamburger').classList.toggle('is-active')\n      // on filter menu click, close language menu if it's currently open\n\n\n      document.querySelector('.languageList').classList.remove('langOpen');\n      document.querySelector('.langArrow').classList.remove('rotate');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var vegetarian = 'Vegetarian';\n      var vegan = 'Vegan';\n      var gf = 'Gluten Free';\n      var _this$props = this.props,\n          updateFilter = _this$props.updateFilter,\n          filter = _this$props.filter;\n      return React.createElement(\"div\", {\n        className: \"filter\",\n        onClick: this.toggleFilterMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: Object.values(filter).indexOf(true) !== -1 ? \"filterIcon\" : \"filterIcon hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"filterText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"filter\"), React.createElement(\"div\", {\n        className: \"filterList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"option\",\n        id: \"vegetarian\",\n        value: \"vegetarian\",\n        onClick: function onClick() {\n          updateFilter(_objectSpread({}, filter, {\n            V: !filter.V\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: filter.V ? 'checkBox checkedBox' : 'checkBox',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), vegetarian), React.createElement(\"p\", {\n        className: \"option\",\n        id: \"vegan\",\n        value: \"vegan\",\n        onClick: function onClick() {\n          updateFilter(_objectSpread({}, filter, {\n            VE: !filter.VE\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: filter.VE ? 'checkBox checkedBox' : 'checkBox',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), vegan), React.createElement(\"p\", {\n        className: \"option\",\n        id: \"gluten-free\",\n        value: \"gluten-free\",\n        onClick: function onClick() {\n          updateFilter(_objectSpread({}, filter, {\n            GF: !filter.GF\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: filter.GF ? 'checkBox checkedBox' : 'checkBox',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), gf)));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nexport default Filter;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Menu/Filter.js"],"names":["React","Filter","e","document","querySelector","classList","toggle","contains","textContent","remove","vegetarian","vegan","gf","props","updateFilter","filter","toggleFilterMenu","Object","values","indexOf","V","VE","GF","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass Filter extends React.Component {\n\n  toggleFilterMenu(e) {\n    document.querySelector('.filterList').classList.toggle('open')\n    if (document.querySelector('.filterList').classList.contains('open')) {\n      document.querySelector('.filterText').textContent = 'close'\n    } else {\n      document.querySelector('.filterText').textContent = 'filter'\n    }\n    // document.querySelector('.hamburger').classList.toggle('is-active')\n    // on filter menu click, close language menu if it's currently open\n    document.querySelector('.languageList').classList.remove('langOpen')\n    document.querySelector('.langArrow').classList.remove('rotate')\n  }\n\n  render() {\n    const vegetarian = 'Vegetarian'\n    const vegan = 'Vegan'\n    const gf = 'Gluten Free'\n    const { updateFilter, filter } = this.props\n\n    return(\n      <div className=\"filter\" onClick={this.toggleFilterMenu}>\n          <div className={Object.values(filter).indexOf(true) !== -1 ? \"filterIcon\" : \"filterIcon hidden\"}></div>\n          {/* <div className=\"hamburger hamburger--spin\">\n            <div className=\"hamburger-box\">\n              <div className=\"hamburger-inner\"></div>\n            </div>\n          </div> */}\n          <span className=\"filterText\">filter</span>\n\n          {/* TODO: there's a lot of repetition going on here, would be nice to not hard code all the filters */}\n          <div className=\"filterList\">\n            <p className=\"option\" id=\"vegetarian\" value=\"vegetarian\" onClick={() => {updateFilter({...filter, V: !filter.V})}}>\n              <span className={filter.V ? 'checkBox checkedBox' : 'checkBox'} />\n              { vegetarian }\n            </p>\n            <p className=\"option\" id=\"vegan\" value=\"vegan\" onClick={() => {updateFilter({...filter, VE: !filter.VE})}}>\n              <span className={filter.VE ? 'checkBox checkedBox' : 'checkBox'}/>\n              { vegan }\n            </p>\n            <p className=\"option\" id=\"gluten-free\" value=\"gluten-free\" onClick={() => {updateFilter({...filter, GF: !filter.GF})}}>\n              <span className={filter.GF ? 'checkBox checkedBox' : 'checkBox'} />\n              { gf }\n            </p>\n            {/* Some un-used filters for later */}\n            {/* <p className=\"option\" id=\"dairy-free\">\n              <span className=\"checkBox\" />\n              Dairy Free\n            </p>\n            <p className=\"option\" id=\"nut-free\">\n              <span className=\"checkBox\" />\n              Nut Free\n            </p> */}\n          </div>\n\n        </div>\n    )\n  }\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}