{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import DragScroll from 'react-dragscroll';\n\nvar HorizontalScrollNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalScrollNav, _React$Component);\n\n  function HorizontalScrollNav(props) {\n    var _this;\n\n    _classCallCheck(this, HorizontalScrollNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorizontalScrollNav).call(this, props));\n    var sectionPostions = _this.props.sectionPostions;\n    _this.state = {\n      dragging: false,\n      scrollPosition: 0,\n      current: false\n    };\n    _this.current = \"$scroll-nav-\".concat(sectionPositions[Object.keys(sectionPositions)[1]]);\n    return _this;\n  }\n\n  _createClass(HorizontalScrollNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.addEventListener('scroll', this.scrollHandle.bind(this));\n      document.getElementById(this.current).classList.add(\"red\");\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n      window.removeEventListener('scroll', this.scrollHandle.bind(this));\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  }, {\n    key: \"sortByValue\",\n    value: function sortByValue(obj) {\n      var newObj = {};\n      var sortable = Object.keys(obj).map(function (key, index) {\n        return [key, obj[key], obj[Object.keys(obj)[index + 1]]];\n      });\n      sortable.sort(function (a, b) {\n        return a[1] - b[1];\n      });\n      sortable.forEach(function (obj) {\n        newObj[obj[0]] = [obj[1], obj[2] ? obj[2] : Infinity];\n      });\n      console.log(newObj);\n      return newObj;\n    }\n  }, {\n    key: \"scrollHandle\",\n    value: function scrollHandle(e) {\n      this.setState({\n        scrollPosition: window.scrollY\n      });\n    }\n  }, {\n    key: \"handleSectionChange\",\n    value: function handleSectionChange(ref) {\n      var current = this.current;\n\n      if (!current) {\n        this.current = ref;\n      } else if (current !== ref) {\n        this.refs.container.scrollLeft = this[ref].offsetLeft;\n        this.current = ref;\n      }\n    }\n  }, {\n    key: \"sectionClickHandle\",\n    value: function sectionClickHandle(e, offset, ref) {\n      document.getElementById(ref).classList.add(\"red\");\n      document.getElementById(this.current).classList.remove(\"red\");\n      window.scrollTo({\n        top: offset,\n        behavior: 'smooth'\n      });\n      this.current = ref;\n      e.preventDefault();\n    }\n  }, {\n    key: \"mouseUpHandle\",\n    value: function mouseUpHandle(e) {\n      if (this.state.dragging) {\n        // const dragging = false;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"mouseDownHandle\",\n    value: function mouseDownHandle(e) {\n      if (!this.state.dragging) {\n        // this.state.dragging = true;\n        this.setState(this.state);\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"mouseMoveHandle\",\n    value: function mouseMoveHandle(e) {\n      if (this.state.dragging) {\n        this.refs.container.scrollLeft -= -this.lastClientX + (this.lastClientX = e.clientX);\n        this.refs.container.scrollTop -= -this.lastClientY + (this.lastClientY = e.clientY);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // eslint-disable-next-line\n      var sectionPositions = this.props.sectionPositions;\n      var sectionNames = Object.keys(sectionPositions);\n      var sortedPositions = this.sortByValue(sectionPositions);\n      return React.createElement(\"div\", {\n        className: \"selectSection\",\n        onMouseUp: this.mouseUpHandle.bind(this),\n        onMouseMove: this.mouseMoveHandle.bind(this),\n        ref: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, sectionNames.map(function (section, index) {\n        var y = _this2.state.scrollPosition;\n        var sectionInterval = sortedPositions[section];\n\n        if (y >= sectionInterval[0] && y < sectionInterval[1]) {\n          _this2.handleSectionChange(\"$scroll-nav-\".concat(section));\n        }\n\n        return React.createElement(\"span\", {\n          onClick: function onClick(e) {\n            _this2.sectionClickHandle(e, sectionPositions[section], \"$scroll-nav-\".concat(section));\n          },\n          ref: function ref(_ref) {\n            return _this2[\"$scroll-nav-\".concat(section)] = _ref;\n          },\n          id: \"$scroll-nav-\".concat(section),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, section);\n      }));\n    }\n  }]);\n\n  return HorizontalScrollNav;\n}(React.Component);\n\n;\nexport default HorizontalScrollNav;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js"],"names":["React","ReactDOM","HorizontalScrollNav","props","sectionPostions","state","dragging","scrollPosition","current","sectionPositions","Object","keys","window","addEventListener","mouseUpHandle","bind","mouseMoveHandle","scrollHandle","document","getElementById","classList","add","removeEventListener","scrollTo","top","behavior","obj","newObj","sortable","map","key","index","sort","a","b","forEach","Infinity","console","log","e","setState","scrollY","ref","refs","container","scrollLeft","offsetLeft","offset","remove","preventDefault","lastClientX","clientX","lastClientY","clientY","scrollTop","sectionNames","sortedPositions","sortByValue","section","y","sectionInterval","handleSectionChange","sectionClickHandle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import DragScroll from 'react-dragscroll';\n\nclass HorizontalScrollNav extends React.Component {\n    constructor(props) {\n        super(props);\n        const { sectionPostions } = this.props;\n        this.state = {\n          dragging: false,\n          scrollPosition: 0,\n          current: false,\n        };\n\n        this.current = `$scroll-nav-${sectionPositions[Object.keys(sectionPositions)[1]]}`;\n    }\n\n\n    componentDidMount() {\n        window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n        window.addEventListener('scroll', this.scrollHandle.bind(this));\n        document.getElementById(this.current).classList.add(\"red\")\n        \n    }\n\n      componentWillUnmount() {\n        window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n        window.removeEventListener('scroll', this.scrollHandle.bind(this));\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    sortByValue(obj){\n        const newObj = {};\n        const sortable = Object.keys(obj).map((key,index) => [key, obj[key], obj[Object.keys(obj)[index+1]]]);\n        sortable.sort((a,b) => a[1] - b[1]);\n        sortable.forEach(obj => {\n          newObj[obj[0]] = [obj[1], obj[2] ? obj[2] : Infinity]; \n        });\n\n        console.log(newObj)\n    \n        return newObj;\n      } \n\n    scrollHandle(e){\n        this.setState({scrollPosition: window.scrollY});\n    }\n\n    handleSectionChange(ref){\n        const { current } = this;\n        if (!current){\n            this.current = ref;\n        } else if(current !== ref){\n                this.refs.container.scrollLeft = this[ref].offsetLeft\n                this.current = ref;\n        }\n    }\n\n    sectionClickHandle(e, offset, ref){\n        document.getElementById(ref).classList.add(\"red\")\n        document.getElementById(this.current).classList.remove(\"red\")\n        window.scrollTo({\n            top: offset,\n            behavior: 'smooth',\n        });\n        this.current = ref;\n        e.preventDefault();\n    }\n\n    mouseUpHandle(e) {\n        if (this.state.dragging) {\n          // const dragging = false;\n          this.setState(this.state);\n        }\n      }\n\n    mouseDownHandle(e) {\n        if (!this.state.dragging) {\n          // this.state.dragging = true;\n          this.setState(this.state);\n          this.lastClientX = e.clientX;\n          this.lastClientY = e.clientY;\n          e.preventDefault();\n        }\n      }\n\n      mouseMoveHandle(e) {\n        if (this.state.dragging) {\n          this.refs.container.scrollLeft -=\n            (-this.lastClientX + (this.lastClientX = e.clientX));\n          this.refs.container.scrollTop -=\n            (-this.lastClientY + (this.lastClientY = e.clientY));\n        }\n      }\n\n    render() {\n        // eslint-disable-next-line\n        const { sectionPositions} = this.props;\n        const sectionNames = Object.keys(sectionPositions);\n        const sortedPositions = this.sortByValue(sectionPositions);\n        return (\n            <div\n                className=\"selectSection\"\n                onMouseUp={this.mouseUpHandle.bind(this)}\n                onMouseMove={this.mouseMoveHandle.bind(this)}\n                ref=\"container\"\n            >\n                    {sectionNames.map((section,index)  => {\n                        const y = this.state.scrollPosition;\n                        const sectionInterval = sortedPositions[section];\n                        if (y >= sectionInterval[0] && y < sectionInterval[1]){\n                            this.handleSectionChange(`$scroll-nav-${section}`);\n                        }\n\n                        return (\n                            <span \n                                onClick={(e) => {this.sectionClickHandle(e, sectionPositions[section], `$scroll-nav-${section}`)}} \n                                ref={(ref) => this[`$scroll-nav-${section}`]=ref}\n                                id={`$scroll-nav-${section}`}\n                            >\n                                {section}\n                            </span>\n                        );\n                    })}\n            </div>\n        );\n    }\n};\n\nexport default HorizontalScrollNav;\n"]},"metadata":{},"sourceType":"module"}