{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Menu/LanguageSelect.js\";\nimport React from 'react';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"langClick\",\n    // on language section click\n    value: function langClick(e) {\n      // toggle 'open' classes\n      document.querySelector('.langArrow').classList.toggle('rotate');\n      document.querySelector('.languageList').classList.toggle('langOpen'); // close filter if it's open\n\n      if (document.querySelector('.filterList') !== null) {\n        document.querySelector('.filterList').classList.remove('open');\n        document.querySelector('.hamburger').classList.remove('is-active');\n      }\n    }\n  }, {\n    key: \"printLanguages\",\n    value: function printLanguages(languageList) {\n      var _this$props = this.props,\n          lang = _this$props.lang,\n          updateLang = _this$props.updateLang;\n      var languageButtons = [];\n      languageList.forEach(function (language) {\n        var className = 'radioBtn';\n\n        if (language.code === lang) {\n          className = 'radioBtn radioSelected';\n        }\n\n        languageButtons.push(React.createElement(\"p\", {\n          className: \"language\",\n          id: language.name,\n          code: language.code,\n          onClick: function onClick(e) {\n            updateLang(language.code);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: className,\n          code: language.code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), language.name));\n      });\n      return languageButtons;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var lang = this.props.lang;\n      var languageList = [{\n        code: 'en',\n        name: 'English'\n      }, {\n        code: 'fr',\n        name: 'Français'\n      }, {\n        code: 'el',\n        name: 'ελληνικά'\n      }, {\n        code: 'zh-CN',\n        name: '中文'\n      }, {\n        code: 'es',\n        name: 'Español'\n      }, {\n        code: 'it',\n        name: 'Italiano'\n      }];\n      return React.createElement(\"div\", {\n        className: \"selectLanguage\",\n        onClick: this.langClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"langCode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, lang), React.createElement(\"div\", {\n        className: \"langArrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"languageList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.printLanguages(languageList)));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nexport default Filter;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Menu/LanguageSelect.js"],"names":["React","Filter","e","document","querySelector","classList","toggle","remove","languageList","props","lang","updateLang","languageButtons","forEach","language","className","code","push","name","langClick","printLanguages","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass Filter extends React.Component {\n\n  // on language section click\n  langClick(e) {\n    // toggle 'open' classes\n    document.querySelector('.langArrow').classList.toggle('rotate')\n    document.querySelector('.languageList').classList.toggle('langOpen')\n\n    // close filter if it's open\n    if (document.querySelector('.filterList') !== null) {\n      document.querySelector('.filterList').classList.remove('open')\n      document.querySelector('.hamburger').classList.remove('is-active')\n    }\n  }\n\n  printLanguages(languageList) {\n    const { lang, updateLang } = this.props\n    let languageButtons = []\n    languageList.forEach(language => {\n      let className = 'radioBtn'\n      if (language.code === lang) {\n        className = 'radioBtn radioSelected'\n      }\n      languageButtons.push(\n        <p\n          className=\"language\"\n          id={language.name}\n          code={language.code}\n          onClick={(e) => {updateLang(language.code)}}\n        >\n          <span className={className} code={language.code} />{language.name}\n        </p>\n      )\n    })\n    return languageButtons\n  }\n\n  render() {\n    const { lang, } = this.props\n    const languageList = [\n      {\n        code: 'en',\n        name: 'English',\n      },\n      {\n        code: 'fr',\n        name: 'Français',\n      },\n      {\n        code: 'el',\n        name: 'ελληνικά',\n      },\n      {\n        code: 'zh-CN',\n        name: '中文',\n      },\n      {\n        code: 'es',\n        name: 'Español',\n      },\n      {\n        code: 'it',\n        name: 'Italiano',\n      },\n    ]\n\n    return(\n      <div className=\"selectLanguage\" onClick={this.langClick}>\n        <span className=\"langCode\">{lang}</span><div className=\"langArrow\"></div>\n\n        <div className=\"languageList\">\n          {this.printLanguages(languageList)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}