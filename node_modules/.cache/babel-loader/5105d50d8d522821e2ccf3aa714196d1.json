{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addToOrder),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFromOrder),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher);\n\nimport * as actionTypes from '../../components/Cart/actions/actionTypes/actionTypes.js'; // eslint-disable-next-line\n\nimport _ from 'lodash';\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport * as orderUtils from '../../utils/orderUtils.js';\nexport var getSubtotals = function getSubtotals(item) {\n  var itemClone = item;\n  var subtotal = 0.0;\n  item.addOns.map(function (addOn) {\n    subtotal = subtotal + addOn.price;\n  });\n  console.log(itemClone);\n  itemClone.subtotal = (item.price + subtotal) * item.quantity;\n  console.log('.', itemClone);\n  return itemClone;\n};\nexport var buildItemTemplate = function buildItemTemplate(item, quantity) {\n  return {\n    id: item.id,\n    name: item.name,\n    addOns: [],\n    modifiers: [],\n    price: 100,\n    quantity: 1\n  };\n};\nexport var addToOrderS = function addToOrderS(oldOrderState, newItem) {\n  var state = _.cloneDeep(oldOrderState);\n\n  var added = false;\n  var newItems = [];\n  var orderTotal = 0.0;\n  console.log(oldOrderState.items);\n  oldOrderState.items.map(function (item) {\n    var itemClone = item;\n\n    if (item.id === newItem.id) {\n      console.log(item);\n      itemClone.quantity = itemClone.quanity + newItem.quantity;\n      added = true;\n    }\n\n    var itemOutput = getSubtotals(itemClone);\n    orderTotal = orderTotal + itemOutput.subtotal;\n    newItems.push(itemOutput);\n  });\n\n  if (!added) {\n    var itemOutput = getSubtotals(newItem);\n    orderTotal = orderTotal + itemOutput.subtotal;\n    newItems.push(itemOutput);\n  }\n\n  return {\n    items: newItems,\n    orderTotal: orderTotal\n  };\n};\nexport function addToOrder(action) {\n  var getCurrentOrder, currentOrder, oldCurrentOrder, newItem, nextCurrentOrder;\n  return _regeneratorRuntime.wrap(function addToOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          getCurrentOrder = function getCurrentOrder(state) {\n            return state.persistentCart.currentOrder;\n          };\n\n          _context.next = 4;\n          return select();\n\n        case 4:\n          currentOrder = _context.sent;\n          console.log(_.cloneDeep(currentOrder));\n          _context.next = 8;\n          return _.cloneDeep(currentOrder.persistentCart.currentOrder);\n\n        case 8:\n          oldCurrentOrder = _context.sent;\n          _context.next = 11;\n          return buildItemTemplate(action.item, action.quantity);\n\n        case 11:\n          newItem = _context.sent;\n          console.log(newItem);\n          _context.next = 15;\n          return addToOrderS(oldCurrentOrder, newItem);\n\n        case 15:\n          nextCurrentOrder = _context.sent;\n          _context.next = 18;\n          return put({\n            type: actionTypes.ADD_TO_ORDER_SUCCESS,\n            currentOrder: nextCurrentOrder\n          });\n\n        case 18:\n          _context.next = 25;\n          break;\n\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 25;\n          return put({\n            type: actionTypes.ADD_TO_ORDER_FAILURE,\n            error: _context.t0\n          });\n\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 20]]);\n}\nexport function removeFromOrder(action) {\n  var getCurrentOrder, currentOrder;\n  return _regeneratorRuntime.wrap(function removeFromOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          getCurrentOrder = function getCurrentOrder(state) {\n            return state.persistentCart.currentOrder;\n          };\n\n          _context2.next = 4;\n          return select(getCurrentOrder);\n\n        case 4:\n          currentOrder = _context2.sent;\n          currentOrder = orderUtils.removeFromOrder(currentOrder, action.item, action.quantity);\n          _context2.next = 8;\n          return put({\n            type: actionTypes.REMOVE_FROM_ORDER_SUCCESS,\n            currentOrder: currentOrder\n          });\n\n        case 8:\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 15;\n          return put({\n            type: actionTypes.REMOVE_FROM_ORDER_FAILURE,\n            error: _context2.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\nexport function actionWatcher() {\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [takeLatest(actionTypes.ADD_TO_ORDER_REQUEST, addToOrder), takeLatest(actionTypes.REMOVE_FROM_ORDER_REQUEST, removeFromOrder)];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/integration/sagas/cartIntegration.js"],"names":["addToOrder","removeFromOrder","actionWatcher","actionTypes","_","takeLatest","put","select","orderUtils","getSubtotals","item","itemClone","subtotal","addOns","map","addOn","price","console","log","quantity","buildItemTemplate","id","name","modifiers","addToOrderS","oldOrderState","newItem","state","cloneDeep","added","newItems","orderTotal","items","quanity","itemOutput","push","action","getCurrentOrder","persistentCart","currentOrder","oldCurrentOrder","nextCurrentOrder","type","ADD_TO_ORDER_SUCCESS","ADD_TO_ORDER_FAILURE","error","REMOVE_FROM_ORDER_SUCCESS","REMOVE_FROM_ORDER_FAILURE","ADD_TO_ORDER_REQUEST","REMOVE_FROM_ORDER_REQUEST"],"mappings":"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","sourcesContent":["import * as actionTypes from '../../components/Cart/actions/actionTypes/actionTypes.js';\n// eslint-disable-next-line\nimport _ from 'lodash';\nimport { takeLatest, put, select,} from 'redux-saga/effects';\nimport * as orderUtils from '../../utils/orderUtils.js';\n\nexport const getSubtotals = item => {\n   \n  const itemClone = item;\n  let subtotal = 0.0;\n  item.addOns.map(addOn => {\n      subtotal = subtotal + addOn.price;\n  });\n  console.log(itemClone)\n\n  itemClone.subtotal = (item.price + subtotal) * item.quantity;\n  console.log('.', itemClone)\n  return itemClone;\n}\n\nexport const buildItemTemplate = (item, quantity) => {\n  return {\n      id: item.id,\n      name: item.name,\n      addOns: [],\n      modifiers: [],\n      price: 100,\n      quantity: 1,\n  }\n}\n\nexport const addToOrderS = (oldOrderState, newItem) => {\n  const state = _.cloneDeep(oldOrderState);\n  \n  let added = false;\n  const newItems = [];\n  let orderTotal = 0.0;\n  \n  console.log(oldOrderState.items);\n  oldOrderState.items.map(item => {\n      let itemClone = item;\n      if(item.id === newItem.id){\n          console.log(item)\n          itemClone.quantity = itemClone.quanity + newItem.quantity;\n          added = true;\n      }\n      const itemOutput = getSubtotals(itemClone);\n      orderTotal = orderTotal + itemOutput.subtotal;\n      newItems.push(itemOutput);\n  });\n  \n  if(!added){\n      const itemOutput = getSubtotals(newItem);\n      orderTotal = orderTotal + itemOutput.subtotal;\n      newItems.push(itemOutput);\n  }\n\n\n  return {\n      items: newItems,\n      orderTotal\n  };\n\n};\n\nexport function* addToOrder(action) {\n  try {\n    \n    const getCurrentOrder = state => state.persistentCart.currentOrder;\n    let currentOrder = yield select();\n    console.log(_.cloneDeep(currentOrder))\n    const oldCurrentOrder = yield _.cloneDeep(currentOrder.persistentCart.currentOrder);\n    \n    const newItem = yield buildItemTemplate(action.item, action.quantity);\n    console.log(newItem);\n    const nextCurrentOrder = yield addToOrderS(oldCurrentOrder, newItem);\n      yield put({\n        type: actionTypes.ADD_TO_ORDER_SUCCESS,\n        currentOrder: nextCurrentOrder,\n      })\n  } catch (error) {\n    console.log(error)\n    yield put({\n      type: actionTypes.ADD_TO_ORDER_FAILURE,\n      error,\n    })\n  }\n}\n\nexport function* removeFromOrder(action) {\n  try {\n    const getCurrentOrder = state => state.persistentCart.currentOrder;\n    let currentOrder = yield select(getCurrentOrder);\n    currentOrder = orderUtils.removeFromOrder(currentOrder, action.item, action.quantity);\n      yield put({\n        type: actionTypes.REMOVE_FROM_ORDER_SUCCESS,\n        currentOrder,\n      })\n  } catch (error) {\n    console.log(error)\n    yield put({\n      type: actionTypes.REMOVE_FROM_ORDER_FAILURE,\n      error,\n    })\n  }\n}\n\nexport function* actionWatcher() {\n  yield [\n    takeLatest(actionTypes.ADD_TO_ORDER_REQUEST, addToOrder),\n    takeLatest(actionTypes.REMOVE_FROM_ORDER_REQUEST, removeFromOrder),\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}