{"ast":null,"code":"import _classCallCheck from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js\";\nimport React from 'react';\nimport DragScroll from 'react-dragscroll';\nimport classNames from 'classnames';\n\nvar HorizontalScrollNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalScrollNav, _React$Component);\n\n  function HorizontalScrollNav(props) {\n    var _this;\n\n    _classCallCheck(this, HorizontalScrollNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorizontalScrollNav).call(this, props));\n    _this.state = {\n      dragging: false,\n      current: _this.props.sections[0]\n    };\n    return _this;\n  }\n\n  _createClass(HorizontalScrollNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n      window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n  }, {\n    key: \"mouseUpHandle\",\n    value: function mouseUpHandle(e) {\n      if (this.state.dragging) {\n        var dragging = false;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"mouseDownHandle\",\n    value: function mouseDownHandle(e) {\n      if (!this.state.dragging) {\n        this.state.dragging = true;\n        this.setState(this.state);\n        this.lastClientX = e.clientX;\n        this.lastClientY = e.clientY;\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"mouseMoveHandle\",\n    value: function mouseMoveHandle(e) {\n      if (this.state.dragging) {\n        this.refs.container.scrollLeft -= -this.lastClientX + (this.lastClientX = e.clientX);\n        this.refs.container.scrollTop -= -this.lastClientY + (this.lastClientY = e.clientY);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sections = this.props.sections;\n      return React.createElement(\"div\", {\n        className: \"selectSection\",\n        onMouseUp: this.mouseUpHandle.bind(this),\n        onMouseMove: this.mouseMoveHandle.bind(this),\n        ref: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, sections.map(function (section) {\n        return React.createElement(\"span\", {\n          className: _this2.state.current === section ? \"red\" : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, section);\n      }));\n    }\n  }]);\n\n  return HorizontalScrollNav;\n}(React.Component);\n\n;\nexport default HorizontalScrollNav;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum/src/components/Common/HorizontalScrollNav.js"],"names":["React","DragScroll","classNames","HorizontalScrollNav","props","state","dragging","current","sections","window","addEventListener","mouseUpHandle","bind","mouseMoveHandle","removeEventListener","e","setState","lastClientX","clientX","lastClientY","clientY","preventDefault","refs","container","scrollLeft","scrollTop","map","section","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAGMC,mB;;;;;AACF,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,OAAO,EAAE,MAAKH,KAAL,CAAWI,QAAX,CAAoB,CAApB;AAFE,KAAb;AAFe;AAMlB;;;;wCAEmB;AAChBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAnC;AACAH,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC,KAAKG,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAArC;AACH;;;2CAEwB;AACrBH,MAAAA,MAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsC,KAAKH,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAtC;AACAH,MAAAA,MAAM,CAACK,mBAAP,CAA2B,WAA3B,EAAwC,KAAKD,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAxC;AACH;;;kCAEaG,C,EAAG;AACb,UAAI,KAAKV,KAAL,CAAWC,QAAf,EAAyB;AACvB,YAAMA,QAAQ,GAAG,KAAjB;AACA,aAAKU,QAAL,CAAc,KAAKX,KAAnB;AACD;AACF;;;oCAEaU,C,EAAG;AACf,UAAI,CAAC,KAAKV,KAAL,CAAWC,QAAhB,EAA0B;AACxB,aAAKD,KAAL,CAAWC,QAAX,GAAsB,IAAtB;AACA,aAAKU,QAAL,CAAc,KAAKX,KAAnB;AACA,aAAKY,WAAL,GAAmBF,CAAC,CAACG,OAArB;AACA,aAAKC,WAAL,GAAmBJ,CAAC,CAACK,OAArB;AACAL,QAAAA,CAAC,CAACM,cAAF;AACD;AACF;;;oCAEeN,C,EAAG;AACjB,UAAI,KAAKV,KAAL,CAAWC,QAAf,EAAyB;AACvB,aAAKgB,IAAL,CAAUC,SAAV,CAAoBC,UAApB,IACG,CAAC,KAAKP,WAAN,IAAqB,KAAKA,WAAL,GAAmBF,CAAC,CAACG,OAA1C,CADH;AAEA,aAAKI,IAAL,CAAUC,SAAV,CAAoBE,SAApB,IACG,CAAC,KAAKN,WAAN,IAAqB,KAAKA,WAAL,GAAmBJ,CAAC,CAACK,OAA1C,CADH;AAED;AACF;;;6BAEM;AAAA;;AAAA,UACGZ,QADH,GACgB,KAAKJ,KADrB,CACGI,QADH;AAEL,aAAO;AAAK,QAAA,SAAS,EAAC,eAAf;AACK,QAAA,SAAS,EAAE,KAAKG,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CADhB;AAEK,QAAA,WAAW,EAAE,KAAKC,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAFlB;AAGK,QAAA,GAAG,EAAC,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIJJ,QAAQ,CAACkB,GAAT,CAAa,UAAAC,OAAO;AAAA,eACX;AAAM,UAAA,SAAS,EAAE,MAAI,CAACtB,KAAL,CAAWE,OAAX,KAAuBoB,OAAvB,GAAiC,KAAjC,GAAyC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,OADL,CADW;AAAA,OAApB,CAJI,CAAP;AAUH;;;;EAzD6B3B,KAAK,CAAC4B,S;;AA2DvC;AAED,eAAezB,mBAAf","sourcesContent":["import React from 'react';\nimport DragScroll from 'react-dragscroll';\nimport classNames from 'classnames';\n\n\nclass HorizontalScrollNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          dragging: false,\n          current: this.props.sections[0],\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.addEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n    \n      componentWillUnmount() {\n        window.removeEventListener('mouseup', this.mouseUpHandle.bind(this));\n        window.removeEventListener('mousemove', this.mouseMoveHandle.bind(this));\n    }\n\n    mouseUpHandle(e) {\n        if (this.state.dragging) {\n          const dragging = false;\n          this.setState(this.state);\n        }\n      }\n\n    mouseDownHandle(e) {\n        if (!this.state.dragging) {\n          this.state.dragging = true;\n          this.setState(this.state);\n          this.lastClientX = e.clientX;\n          this.lastClientY = e.clientY;\n          e.preventDefault();\n        }\n      }\n    \n      mouseMoveHandle(e) {\n        if (this.state.dragging) {\n          this.refs.container.scrollLeft -=\n            (-this.lastClientX + (this.lastClientX = e.clientX));\n          this.refs.container.scrollTop -=\n            (-this.lastClientY + (this.lastClientY = e.clientY));\n        }\n      }\n\n    render() {\n        const { sections } = this.props;\n        return <div className=\"selectSection\"\n                    onMouseUp={this.mouseUpHandle.bind(this)}\n                    onMouseMove={this.mouseMoveHandle.bind(this)}\n                    ref=\"container\">\n          {sections.map(section => (\n                    <span className={this.state.current === section ? \"red\" : ''}>\n                        {section}\n                    </span>\n                ))}\n        </div>;\n    }\n\n};\n\nexport default HorizontalScrollNav;"]},"metadata":{},"sourceType":"module"}