{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addToOrder),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFromOrder),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher);\n\nimport * as actionTypes from '../../components/Cart/actions/actionTypes/actionTypes.js'; // eslint-disable-next-line\n\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport * as orderUtils from '../../utils/orderUtils.js';\n\nvar getCurrentOrder = function getCurrentOrder(state) {\n  return state.persistentCart.currentOrder;\n};\n\nexport function addToOrder(action) {\n  var currentOrder, newItem, nextCurrentOrder;\n  return _regeneratorRuntime.wrap(function addToOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(getCurrentOrder);\n\n        case 3:\n          currentOrder = _context.sent;\n          _context.next = 6;\n          return buildItemTemplate(rawItem, quantity);\n\n        case 6:\n          newItem = _context.sent;\n          _context.next = 9;\n          return orderUtils.addToOrder(currentOrder, newItem);\n\n        case 9:\n          nextCurrentOrder = _context.sent;\n          _context.next = 12;\n          return put({\n            type: actionTypes.ADD_TO_ORDER_SUCCESS,\n            currentOrder: nextCurrentOrder\n          });\n\n        case 12:\n          _context.next = 19;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 19;\n          return put({\n            type: actionTypes.ADD_TO_ORDER_FAILURE,\n            error: _context.t0\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 14]]);\n}\nexport function removeFromOrder(action) {\n  var currentOrder;\n  return _regeneratorRuntime.wrap(function removeFromOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return select(getCurrentOrder);\n\n        case 3:\n          currentOrder = _context2.sent;\n          currentOrder = orderUtils.removeFromOrder(currentOrder, action.item, action.quantity);\n          _context2.next = 7;\n          return put({\n            type: actionTypes.REMOVE_FROM_ORDER_SUCCESS,\n            currentOrder: currentOrder\n          });\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 14;\n          return put({\n            type: actionTypes.REMOVE_FROM_ORDER_FAILURE,\n            error: _context2.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\nexport function actionWatcher() {\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return [takeLatest(actionTypes.ADD_TO_ORDER_REQUEST, addToOrder), takeLatest(actionTypes.REMOVE_FROM_ORDER_REQUEST, removeFromOrder)];\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/integration/sagas/cartIntegration.js"],"names":["addToOrder","removeFromOrder","actionWatcher","actionTypes","takeLatest","put","select","orderUtils","getCurrentOrder","state","persistentCart","currentOrder","action","buildItemTemplate","rawItem","quantity","newItem","nextCurrentOrder","type","ADD_TO_ORDER_SUCCESS","console","log","ADD_TO_ORDER_FAILURE","error","item","REMOVE_FROM_ORDER_SUCCESS","REMOVE_FROM_ORDER_FAILURE","ADD_TO_ORDER_REQUEST","REMOVE_FROM_ORDER_REQUEST"],"mappings":";;;;yBAOiBA,U;;;yBAkBAC,e;;;yBAiBAC,a;;AA1CjB,OAAO,KAAKC,WAAZ,MAA6B,0DAA7B,C,CACA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,cAAN,CAAqBC,YAAzB;AAAA,CAA7B;;AAEA,OAAO,SAAUX,UAAV,CAAqBY,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMN,MAAM,CAACE,eAAD,CAAZ;;AAFhB;AAECG,UAAAA,YAFD;AAAA;AAGa,iBAAME,iBAAiB,CAACC,OAAD,EAAUC,QAAV,CAAvB;;AAHb;AAGGC,UAAAA,OAHH;AAAA;AAIsB,iBAAMT,UAAU,CAACP,UAAX,CAAsBW,YAAtB,EAAoCK,OAApC,CAAN;;AAJtB;AAIGC,UAAAA,gBAJH;AAAA;AAKD,iBAAMZ,GAAG,CAAC;AACRa,YAAAA,IAAI,EAAEf,WAAW,CAACgB,oBADV;AAERR,YAAAA,YAAY,EAAEM;AAFN,WAAD,CAAT;;AALC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUHG,UAAAA,OAAO,CAACC,GAAR;AAVG;AAWH,iBAAMhB,GAAG,CAAC;AACRa,YAAAA,IAAI,EAAEf,WAAW,CAACmB,oBADV;AAERC,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBP,OAAO,SAAUtB,eAAV,CAA0BW,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMN,MAAM,CAACE,eAAD,CAAZ;;AAFhB;AAECG,UAAAA,YAFD;AAGHA,UAAAA,YAAY,GAAGJ,UAAU,CAACN,eAAX,CAA2BU,YAA3B,EAAyCC,MAAM,CAACY,IAAhD,EAAsDZ,MAAM,CAACG,QAA7D,CAAf;AAHG;AAID,iBAAMV,GAAG,CAAC;AACRa,YAAAA,IAAI,EAAEf,WAAW,CAACsB,yBADV;AAERd,YAAAA,YAAY,EAAZA;AAFQ,WAAD,CAAT;;AAJC;AAAA;AAAA;;AAAA;AAAA;AAAA;AASHS,UAAAA,OAAO,CAACC,GAAR;AATG;AAUH,iBAAMhB,GAAG,CAAC;AACRa,YAAAA,IAAI,EAAEf,WAAW,CAACuB,yBADV;AAERH,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBP,OAAO,SAAUrB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAM,CACJE,UAAU,CAACD,WAAW,CAACwB,oBAAb,EAAmC3B,UAAnC,CADN,EAEJI,UAAU,CAACD,WAAW,CAACyB,yBAAb,EAAwC3B,eAAxC,CAFN,CAAN;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as actionTypes from '../../components/Cart/actions/actionTypes/actionTypes.js';\n// eslint-disable-next-line\nimport { takeLatest, put, select } from 'redux-saga/effects';\nimport * as orderUtils from '../../utils/orderUtils.js';\n\nconst getCurrentOrder = state => state.persistentCart.currentOrder;\n\nexport function* addToOrder(action) {\n  try {\n    let currentOrder = yield select(getCurrentOrder);\n    const newItem = yield buildItemTemplate(rawItem, quantity);\n    const nextCurrentOrder = yield orderUtils.addToOrder(currentOrder, newItem);\n      yield put({\n        type: actionTypes.ADD_TO_ORDER_SUCCESS,\n        currentOrder: nextCurrentOrder,\n      })\n  } catch (error) {\n    console.log(error)\n    yield put({\n      type: actionTypes.ADD_TO_ORDER_FAILURE,\n      error,\n    })\n  }\n}\n\nexport function* removeFromOrder(action) {\n  try {\n    let currentOrder = yield select(getCurrentOrder);\n    currentOrder = orderUtils.removeFromOrder(currentOrder, action.item, action.quantity);\n      yield put({\n        type: actionTypes.REMOVE_FROM_ORDER_SUCCESS,\n        currentOrder,\n      })\n  } catch (error) {\n    console.log(error)\n    yield put({\n      type: actionTypes.REMOVE_FROM_ORDER_FAILURE,\n      error,\n    })\n  }\n}\n\nexport function* actionWatcher() {\n  yield [\n    takeLatest(actionTypes.ADD_TO_ORDER_REQUEST, addToOrder),\n    takeLatest(actionTypes.REMOVE_FROM_ORDER_REQUEST, removeFromOrder),\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}