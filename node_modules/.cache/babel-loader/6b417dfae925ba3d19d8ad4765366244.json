{"ast":null,"code":"import _objectSpread from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelfoster/Git/mryum-avc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelfoster/Git/mryum-avc/src/components/Menu/Filter.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport Modal from '../Common/Modal.js';\nimport { filterNames, filterWarnings } from './enums/filterEnums.js';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props)); // TODO: handle this with redux / local storage later\n\n    _this.toggleFilterMenu = function (e) {\n      document.querySelector('.filterList').classList.toggle('open');\n\n      if (document.querySelector('.filterList').classList.contains('open')) {\n        document.querySelector('.filterText').textContent = 'close';\n      } else {\n        document.querySelector('.filterText').textContent = 'filter';\n      } // document.querySelector('.hamburger').classList.toggle('is-active')\n\n\n      _this.closeLangMenu();\n    };\n\n    _this.state = {\n      warningHasBeenShown: false,\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', _.throttle(this.closeLangMenu, 300, {\n        trailing: true,\n        leading: true\n      }));\n    }\n  }, {\n    key: \"closeLangMenu\",\n    value: function closeLangMenu() {\n      var path = window.location.pathname.split('/');\n\n      if (!path[2]) {\n        // on filter menu click, close language menu if it's currently open\n        document.querySelector('.languageList').classList.remove('langOpen');\n        document.querySelector('.langArrow').classList.remove('rotate');\n      }\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal(lang) {\n      var _this2 = this;\n\n      var warning = filterWarnings[lang.replace('-', '')];\n      return React.createElement(Modal, {\n        heading: warning.greeting,\n        body: warning.warning,\n        cta: warning.confirmation,\n        onClick: function onClick() {\n          _this2.setState({\n            warningHasBeenShown: true,\n            showModal: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          updateFilter = _this$props.updateFilter,\n          filter = _this$props.filter,\n          lang = _this$props.lang;\n      var filters = filterNames[lang.replace('-', '')];\n      var vegetarian = filters.V;\n      var vegan = filters.VE;\n      var gf = filters.GF;\n      return React.createElement(\"div\", {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.showModal && !this.state.warningHasBeenShown ? this.renderModal(lang) : '', React.createElement(\"div\", {\n        className: Object.values(filter).indexOf(true) !== -1 ? \"filterIcon\" : \"filterIcon hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"filterText\",\n        onClick: this.toggleFilterMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"filter\"), React.createElement(\"div\", {\n        className: \"filterList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"option\",\n        id: \"vegetarian\",\n        value: \"vegetarian\",\n        onClick: function onClick() {\n          updateFilter(_objectSpread({}, filter, {\n            V: !filter.V\n          }), _this3.setState({\n            showModal: true\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: filter.V ? 'checkBox checkedBox' : 'checkBox',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \" \", vegetarian), React.createElement(\"p\", {\n        className: \"option\",\n        id: \"vegan\",\n        value: \"vegan\",\n        onClick: function onClick() {\n          updateFilter(_objectSpread({}, filter, {\n            VE: !filter.VE\n          }), _this3.setState({\n            showModal: true\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: filter.VE ? 'checkBox checkedBox' : 'checkBox',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), \" \", vegan), React.createElement(\"p\", {\n        className: \"option\",\n        id: \"gluten-free\",\n        value: \"gluten-free\",\n        onClick: function onClick() {\n          updateFilter(_objectSpread({}, filter, {\n            GF: !filter.GF\n          }), _this3.setState({\n            showModal: true\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: filter.GF ? 'checkBox checkedBox' : 'checkBox',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \" \", gf)));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nexport default Filter;","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/components/Menu/Filter.js"],"names":["React","_","Modal","filterNames","filterWarnings","Filter","props","toggleFilterMenu","e","document","querySelector","classList","toggle","contains","textContent","closeLangMenu","state","warningHasBeenShown","showModal","window","addEventListener","throttle","trailing","leading","path","location","pathname","split","remove","lang","warning","replace","greeting","confirmation","setState","updateFilter","filter","filters","vegetarian","V","vegan","VE","gf","GF","renderModal","Object","values","indexOf","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport Modal from '../Common/Modal.js';\nimport { filterNames, filterWarnings } from './enums/filterEnums.js'\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props)\n\n    // TODO: handle this with redux / local storage later\n    this.state = {\n      warningHasBeenShown: false,\n      showModal: false,\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', _.throttle(this.closeLangMenu, 300, {\n      trailing: true,\n      leading: true\n    }))\n  }\n\n  closeLangMenu() {\n    const path = window.location.pathname.split('/')\n    if (!path[2]) {\n      // on filter menu click, close language menu if it's currently open\n      document.querySelector('.languageList').classList.remove('langOpen')\n      document.querySelector('.langArrow').classList.remove('rotate')\n    }\n  }\n\n  toggleFilterMenu = (e) => {\n    document.querySelector('.filterList').classList.toggle('open')\n    if (document.querySelector('.filterList').classList.contains('open')) {\n      document.querySelector('.filterText').textContent = 'close'\n    } else {\n      document.querySelector('.filterText').textContent = 'filter'\n    }\n    // document.querySelector('.hamburger').classList.toggle('is-active')\n    this.closeLangMenu()\n  }\n\n  renderModal(lang) {\n    const warning = filterWarnings[lang.replace('-','')]\n\n    return(\n      <Modal\n        heading={warning.greeting}\n        body={warning.warning}\n        cta={warning.confirmation}\n        onClick={() => {\n          this.setState({\n            warningHasBeenShown: true,\n            showModal: false,\n          })\n        }\n      }/>\n    )\n  }\n\n  render() {\n    const { updateFilter, filter, lang } = this.props\n    const filters = filterNames[lang.replace('-','')]\n    const vegetarian = filters.V\n    const vegan = filters.VE\n    const gf = filters.GF\n\n    return (<div className=\"filter\">\n\n      { this.state.showModal && !this.state.warningHasBeenShown ?\n        this.renderModal(lang)\n        : '' }\n\n      <div className={Object.values(filter).indexOf(true) !== -1\n          ? \"filterIcon\"\n          : \"filterIcon hidden\"}></div>\n      {/* <div className=\"hamburger hamburger--spin\">\n          <div className=\"hamburger-box\">\n            <div className=\"hamburger-inner\"></div>\n          </div>\n        </div> */\n      }\n      <span className=\"filterText\" onClick={this.toggleFilterMenu}>filter</span>\n\n      {/* TODO: there's a lot of repetition going on here, would be nice to not hard code all the filters */\n      }\n      <div className=\"filterList\">\n        <p className=\"option\" id=\"vegetarian\" value=\"vegetarian\" onClick={() => {\n            updateFilter({\n              ...filter,\n              V: !filter.V\n            },\n            this.setState({\n              showModal: true,\n            })\n          )\n          }}>\n          <span className={filter.V\n              ? 'checkBox checkedBox'\n              : 'checkBox'}/> {vegetarian}\n        </p>\n        <p className=\"option\" id=\"vegan\" value=\"vegan\" onClick={() => {\n            updateFilter({\n              ...filter,\n              VE: !filter.VE\n            },\n            this.setState({\n              showModal: true,\n            })\n          )\n          }}>\n          <span className={filter.VE\n              ? 'checkBox checkedBox'\n              : 'checkBox'}/> {vegan}\n        </p>\n        <p className=\"option\" id=\"gluten-free\" value=\"gluten-free\" onClick={() => {\n            updateFilter({\n              ...filter,\n              GF: !filter.GF\n            },\n            this.setState({\n              showModal: true,\n            })\n          )\n          }}>\n          <span className={filter.GF\n              ? 'checkBox checkedBox'\n              : 'checkBox'}/> {gf}\n        </p>\n        {/* Some un-used filters for later */}\n        {/* <p className=\"option\" id=\"dairy-free\">\n            <span className=\"checkBox\" />\n            Dairy Free\n          </p>\n          <p className=\"option\" id=\"nut-free\">\n            <span className=\"checkBox\" />\n            Nut Free\n          </p> */\n        }\n      </div>\n\n    </div>)\n  }\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}