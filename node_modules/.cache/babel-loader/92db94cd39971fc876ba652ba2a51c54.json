{"ast":null,"code":"// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore, persistReducer, createMigrate } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport storage from 'redux-persist/lib/storage';\nimport { createBrowserHistory } from 'history';\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport migrations from './migrations/reduxPersistMigrations';\nexport var history = createBrowserHistory();\nexport default (function () {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var persistConfig = {\n    key: 'root',\n    storage: storage,\n    version: 5,\n    stateReconciler: autoMergeLevel2,\n    migrate: createMigrate(migrations, {\n      debug: false\n    }),\n    blacklist: ['router', 'menu', 'common']\n  };\n  var middleware = [sagaMiddleware, routerMiddleware(history)];\n  var enhancers = [];\n  var store = ''; // for dev\n\n  if (process.env.REACT_APP_REDUX_DEV_TOOLS === 'true') {\n    store = createStore(persistReducer(persistConfig, makeRootReducer(history)), initialState, window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true\n    }).apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n  } // for prod\n  else {\n      store = createStore(persistReducer(persistConfig, makeRootReducer(history)), initialState, compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers)));\n    }\n\n  store.asyncReducers = {};\n  window.store = store;\n  var persistor = persistStore(store);\n  return {\n    store: store,\n    persistor: persistor,\n    runSaga: sagaMiddleware.run\n  };\n});","map":{"version":3,"sources":["/Users/michaelfoster/Git/mryum-avc/src/Store.js"],"names":["applyMiddleware","compose","createStore","persistStore","persistReducer","createMigrate","routerMiddleware","storage","createBrowserHistory","makeRootReducer","createSagaMiddleware","autoMergeLevel2","migrations","history","initialState","sagaMiddleware","persistConfig","key","version","stateReconciler","migrate","debug","blacklist","middleware","enhancers","store","process","env","REACT_APP_REDUX_DEV_TOOLS","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","asyncReducers","persistor","runSaga","run"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,eAA5D;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,IAAMC,OAAO,GAAGL,oBAAoB,EAApC;AAEP,gBAAe,YAAuB;AAAA,MAAtBM,YAAsB,uEAAP,EAAO;AAEpC,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,MAAMM,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE,MADe;AAEpBV,IAAAA,OAAO,EAAPA,OAFoB;AAGpBW,IAAAA,OAAO,EAAE,CAHW;AAIpBC,IAAAA,eAAe,EAAER,eAJG;AAKpBS,IAAAA,OAAO,EAAEf,aAAa,CAACO,UAAD,EAAa;AAACS,MAAAA,KAAK,EAAE;AAAR,KAAb,CALF;AAMpBC,IAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB;AANS,GAAtB;AASA,MAAMC,UAAU,GAAG,CACjBR,cADiB,EAEjBT,gBAAgB,CAACO,OAAD,CAFC,CAAnB;AAIA,MAAMW,SAAS,GAAG,EAAlB;AACA,MAAIC,KAAK,GAAG,EAAZ,CAjBoC,CAmBpC;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,KAA0C,MAA9C,EAAsD;AACpDH,IAAAA,KAAK,GAAGvB,WAAW,CACjBE,cAAc,CAACY,aAAD,EAAgBP,eAAe,CAACI,OAAD,CAA/B,CADG,EAEjBC,YAFiB,EAGjBe,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,MAAAA,KAAK,EAAE;AADmC,KAA5C,iBAEG/B,eAAe,MAAf,SAAmBuB,UAAnB,CAFH,SAEsCC,SAFtC,EAHiB,CAAnB;AAOD,GARD,CAQE;AARF,OASK;AACHC,MAAAA,KAAK,GAAGvB,WAAW,CACjBE,cAAc,CAACY,aAAD,EAAgBP,eAAe,CAACI,OAAD,CAA/B,CADG,EAEjBC,YAFiB,EAGjBb,OAAO,MAAP,UAAQD,eAAe,MAAf,SAAmBuB,UAAnB,CAAR,SAA2CC,SAA3C,EAHiB,CAAnB;AAKD;;AAEDC,EAAAA,KAAK,CAACO,aAAN,GAAsB,EAAtB;AAEAH,EAAAA,MAAM,CAACJ,KAAP,GAAeA,KAAf;AACA,MAAIQ,SAAS,GAAG9B,YAAY,CAACsB,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASQ,IAAAA,SAAS,EAATA,SAAT;AAAoBC,IAAAA,OAAO,EAAEnB,cAAc,CAACoB;AAA5C,GAAP;AACD,CA1CD","sourcesContent":["// eslint-disable-next-line\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { persistStore, persistReducer, createMigrate } from 'redux-persist'\nimport { routerMiddleware } from 'connected-react-router';\nimport storage from 'redux-persist/lib/storage'\nimport { createBrowserHistory } from 'history'\nimport makeRootReducer from './rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport migrations from './migrations/reduxPersistMigrations';\n\nexport const history = createBrowserHistory();\n\nexport default (initialState = {}) => {\n\n  const sagaMiddleware = createSagaMiddleware();\n  const persistConfig = {\n    key: 'root',\n    storage,\n    version: 5,\n    stateReconciler: autoMergeLevel2,\n    migrate: createMigrate(migrations, {debug: false}),\n    blacklist: ['router', 'menu', 'common']\n  }\n\n  const middleware = [\n    sagaMiddleware,\n    routerMiddleware(history),\n  ];\n  const enhancers = [];\n  let store = '';\n\n  // for dev\n  if (process.env.REACT_APP_REDUX_DEV_TOOLS === 'true') {\n    store = createStore(\n      persistReducer(persistConfig, makeRootReducer(history)),\n      initialState,\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true,\n      })(applyMiddleware(...middleware), ...enhancers),\n    );\n  } // for prod\n  else {\n    store = createStore(\n      persistReducer(persistConfig, makeRootReducer(history)),\n      initialState,\n      compose(applyMiddleware(...middleware), ...enhancers),\n    );\n  }\n\n  store.asyncReducers = {};\n\n  window.store = store;\n  let persistor = persistStore(store)\n  return { store, persistor, runSaga: sagaMiddleware.run,} ;\n};\n"]},"metadata":{},"sourceType":"module"}